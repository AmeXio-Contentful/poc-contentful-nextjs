"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  authorCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AuthorCollection
  componentDuplexCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentDuplexCollection
  componentHeroBannerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentHeroBannerCollection
  componentInfoBlockCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentInfoBlockCollection
  componentQuoteCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentQuoteCollection
  contentBlokCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentBlokCollection
  contentBlokMetCtaCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentBlokMetCtaCollection
  contentBlokSplitCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentBlokSplitCollection
  contentCarouselCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentCarouselCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  heroBannerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HeroBannerCollection
  imageCarouselCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ImageCarouselCollection
  seoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SeoCollection
  topicPersonCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TopicPersonCollection
  topicProductCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TopicProductCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/author)
"""
type Author implements Entry {
  avatar(locale: String, preview: Boolean): Asset
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): AuthorLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type AuthorCollection {
  items: [Author]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AuthorFilter {
  AND: [AuthorFilter]
  OR: [AuthorFilter]
  avatar_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type AuthorLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  heroBannerCollection(limit: Int = 100, locale: String, order: [AuthorLinkingCollectionsHeroBannerCollectionOrder], preview: Boolean, skip: Int = 0): HeroBannerCollection
}

enum AuthorLinkingCollectionsHeroBannerCollectionOrder {
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  fullWidth_ASC
  fullWidth_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  test_ASC
  test_DESC
  title_ASC
  title_DESC
}

enum AuthorOrder {
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Full-width container for creating visually distinct Calls-to-Action (CTAs) [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/componentCta)
"""
type ComponentCta implements Entry {
  colorPalette(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  ctaText(locale: String): String
  headline(locale: String): String
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentCtaLinkingCollections
  subline(locale: String): ComponentCtaSubline
  sys: Sys!
  targetPage(locale: String, preview: Boolean): ComponentCtaTargetPage
  urlParameters(locale: String): String
}

type ComponentCtaCollection {
  items: [ComponentCta]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentCtaFilter {
  AND: [ComponentCtaFilter]
  OR: [ComponentCtaFilter]
  colorPalette: String
  colorPalette_contains: String
  colorPalette_exists: Boolean
  colorPalette_in: [String]
  colorPalette_not: String
  colorPalette_not_contains: String
  colorPalette_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  ctaText: String
  ctaText_contains: String
  ctaText_exists: Boolean
  ctaText_in: [String]
  ctaText_not: String
  ctaText_not_contains: String
  ctaText_not_in: [String]
  headline: String
  headline_contains: String
  headline_exists: Boolean
  headline_in: [String]
  headline_not: String
  headline_not_contains: String
  headline_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subline_contains: String
  subline_exists: Boolean
  subline_not_contains: String
  sys: SysFilter
  targetPage_exists: Boolean
  urlParameters: String
  urlParameters_contains: String
  urlParameters_exists: Boolean
  urlParameters_in: [String]
  urlParameters_not: String
  urlParameters_not_contains: String
  urlParameters_not_in: [String]
}

type ComponentCtaLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ComponentCtaLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ComponentCtaLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentCtaOrder {
  colorPalette_ASC
  colorPalette_DESC
  ctaText_ASC
  ctaText_DESC
  headline_ASC
  headline_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  urlParameters_ASC
  urlParameters_DESC
}

type ComponentCtaSubline {
  json: JSON!
  links: ComponentCtaSublineLinks!
}

type ComponentCtaSublineAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentCtaSublineEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentCtaSublineLinks {
  assets: ComponentCtaSublineAssets!
  entries: ComponentCtaSublineEntries!
  resources: ComponentCtaSublineResources!
}

type ComponentCtaSublineResources {
  block: [ComponentCtaSublineResourcesBlock!]!
  hyperlink: [ComponentCtaSublineResourcesHyperlink!]!
  inline: [ComponentCtaSublineResourcesInline!]!
}

type ComponentCtaSublineResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentCtaSublineResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentCtaSublineResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

union ComponentCtaTargetPage = Page

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/componentDemo)
"""
type ComponentDemo implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ComponentDemoLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type ComponentDemoCollection {
  items: [ComponentDemo]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentDemoFilter {
  AND: [ComponentDemoFilter]
  OR: [ComponentDemoFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ComponentDemoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentDemoOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Full-width container for displaying side-by-side image and copy, includes multiple layout options [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/componentDuplex)
"""
type ComponentDuplex implements Entry {
  bodyText(locale: String): ComponentDuplexBodyText
  colorPalette(locale: String): String
  containerLayout(locale: String): Boolean
  contentfulMetadata: ContentfulMetadata!
  ctaText(locale: String): String
  headline(locale: String): String
  image(locale: String, preview: Boolean): Asset
  imageStyle(locale: String): Boolean
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentDuplexLinkingCollections
  sys: Sys!
  targetPage(locale: String, preview: Boolean): ComponentDuplexTargetPage
}

type ComponentDuplexBodyText {
  json: JSON!
  links: ComponentDuplexBodyTextLinks!
}

type ComponentDuplexBodyTextAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentDuplexBodyTextEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentDuplexBodyTextLinks {
  assets: ComponentDuplexBodyTextAssets!
  entries: ComponentDuplexBodyTextEntries!
  resources: ComponentDuplexBodyTextResources!
}

type ComponentDuplexBodyTextResources {
  block: [ComponentDuplexBodyTextResourcesBlock!]!
  hyperlink: [ComponentDuplexBodyTextResourcesHyperlink!]!
  inline: [ComponentDuplexBodyTextResourcesInline!]!
}

type ComponentDuplexBodyTextResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentDuplexBodyTextResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentDuplexBodyTextResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ComponentDuplexCollection {
  items: [ComponentDuplex]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentDuplexFilter {
  AND: [ComponentDuplexFilter]
  OR: [ComponentDuplexFilter]
  bodyText_contains: String
  bodyText_exists: Boolean
  bodyText_not_contains: String
  colorPalette: String
  colorPalette_contains: String
  colorPalette_exists: Boolean
  colorPalette_in: [String]
  colorPalette_not: String
  colorPalette_not_contains: String
  colorPalette_not_in: [String]
  containerLayout: Boolean
  containerLayout_exists: Boolean
  containerLayout_not: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  ctaText: String
  ctaText_contains: String
  ctaText_exists: Boolean
  ctaText_in: [String]
  ctaText_not: String
  ctaText_not_contains: String
  ctaText_not_in: [String]
  headline: String
  headline_contains: String
  headline_exists: Boolean
  headline_in: [String]
  headline_not: String
  headline_not_contains: String
  headline_not_in: [String]
  imageStyle: Boolean
  imageStyle_exists: Boolean
  imageStyle_not: Boolean
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  targetPage_exists: Boolean
}

type ComponentDuplexLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ComponentDuplexLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ComponentDuplexLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentDuplexOrder {
  colorPalette_ASC
  colorPalette_DESC
  containerLayout_ASC
  containerLayout_DESC
  ctaText_ASC
  ctaText_DESC
  headline_ASC
  headline_DESC
  imageStyle_ASC
  imageStyle_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

union ComponentDuplexTargetPage = Page

"""
Full-width container for displaying images and snappy copy; can include an optional CTA [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/componentHeroBanner)
"""
type ComponentHeroBanner implements Entry {
  bodyText(locale: String): ComponentHeroBannerBodyText
  colorPalette(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  ctaText(locale: String): String
  headline(locale: String): String
  heroSize(locale: String): Boolean
  image(locale: String, preview: Boolean): Asset
  imageStyle(locale: String): Boolean
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentHeroBannerLinkingCollections
  sys: Sys!
  targetPage(locale: String, preview: Boolean): ComponentHeroBannerTargetPage
}

type ComponentHeroBannerBodyText {
  json: JSON!
  links: ComponentHeroBannerBodyTextLinks!
}

type ComponentHeroBannerBodyTextAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentHeroBannerBodyTextEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentHeroBannerBodyTextLinks {
  assets: ComponentHeroBannerBodyTextAssets!
  entries: ComponentHeroBannerBodyTextEntries!
  resources: ComponentHeroBannerBodyTextResources!
}

type ComponentHeroBannerBodyTextResources {
  block: [ComponentHeroBannerBodyTextResourcesBlock!]!
  hyperlink: [ComponentHeroBannerBodyTextResourcesHyperlink!]!
  inline: [ComponentHeroBannerBodyTextResourcesInline!]!
}

type ComponentHeroBannerBodyTextResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentHeroBannerBodyTextResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentHeroBannerBodyTextResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ComponentHeroBannerCollection {
  items: [ComponentHeroBanner]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentHeroBannerFilter {
  AND: [ComponentHeroBannerFilter]
  OR: [ComponentHeroBannerFilter]
  bodyText_contains: String
  bodyText_exists: Boolean
  bodyText_not_contains: String
  colorPalette: String
  colorPalette_contains: String
  colorPalette_exists: Boolean
  colorPalette_in: [String]
  colorPalette_not: String
  colorPalette_not_contains: String
  colorPalette_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  ctaText: String
  ctaText_contains: String
  ctaText_exists: Boolean
  ctaText_in: [String]
  ctaText_not: String
  ctaText_not_contains: String
  ctaText_not_in: [String]
  headline: String
  headline_contains: String
  headline_exists: Boolean
  headline_in: [String]
  headline_not: String
  headline_not_contains: String
  headline_not_in: [String]
  heroSize: Boolean
  heroSize_exists: Boolean
  heroSize_not: Boolean
  imageStyle: Boolean
  imageStyle_exists: Boolean
  imageStyle_not: Boolean
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  targetPage_exists: Boolean
}

type ComponentHeroBannerLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ComponentHeroBannerLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ComponentHeroBannerLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentHeroBannerOrder {
  colorPalette_ASC
  colorPalette_DESC
  ctaText_ASC
  ctaText_DESC
  headline_ASC
  headline_DESC
  heroSize_ASC
  heroSize_DESC
  imageStyle_ASC
  imageStyle_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

union ComponentHeroBannerTargetPage = Page

"""
Full-width container for displaying short bits of generic information with optional icons/visuals [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/componentInfoBlock)
"""
type ComponentInfoBlock implements Entry {
  block1Body(locale: String): ComponentInfoBlockBlock1Body
  block1Image(locale: String, preview: Boolean): Asset
  block2Body(locale: String): ComponentInfoBlockBlock2Body
  block2Image(locale: String, preview: Boolean): Asset
  block3Body(locale: String): ComponentInfoBlockBlock3Body
  block3Image(locale: String, preview: Boolean): Asset
  colorPalette(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  headline(locale: String): String
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentInfoBlockLinkingCollections
  subline(locale: String): String
  sys: Sys!
}

type ComponentInfoBlockBlock1Body {
  json: JSON!
  links: ComponentInfoBlockBlock1BodyLinks!
}

type ComponentInfoBlockBlock1BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentInfoBlockBlock1BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentInfoBlockBlock1BodyLinks {
  assets: ComponentInfoBlockBlock1BodyAssets!
  entries: ComponentInfoBlockBlock1BodyEntries!
  resources: ComponentInfoBlockBlock1BodyResources!
}

type ComponentInfoBlockBlock1BodyResources {
  block: [ComponentInfoBlockBlock1BodyResourcesBlock!]!
  hyperlink: [ComponentInfoBlockBlock1BodyResourcesHyperlink!]!
  inline: [ComponentInfoBlockBlock1BodyResourcesInline!]!
}

type ComponentInfoBlockBlock1BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentInfoBlockBlock1BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentInfoBlockBlock1BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ComponentInfoBlockBlock2Body {
  json: JSON!
  links: ComponentInfoBlockBlock2BodyLinks!
}

type ComponentInfoBlockBlock2BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentInfoBlockBlock2BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentInfoBlockBlock2BodyLinks {
  assets: ComponentInfoBlockBlock2BodyAssets!
  entries: ComponentInfoBlockBlock2BodyEntries!
  resources: ComponentInfoBlockBlock2BodyResources!
}

type ComponentInfoBlockBlock2BodyResources {
  block: [ComponentInfoBlockBlock2BodyResourcesBlock!]!
  hyperlink: [ComponentInfoBlockBlock2BodyResourcesHyperlink!]!
  inline: [ComponentInfoBlockBlock2BodyResourcesInline!]!
}

type ComponentInfoBlockBlock2BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentInfoBlockBlock2BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentInfoBlockBlock2BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ComponentInfoBlockBlock3Body {
  json: JSON!
  links: ComponentInfoBlockBlock3BodyLinks!
}

type ComponentInfoBlockBlock3BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentInfoBlockBlock3BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentInfoBlockBlock3BodyLinks {
  assets: ComponentInfoBlockBlock3BodyAssets!
  entries: ComponentInfoBlockBlock3BodyEntries!
  resources: ComponentInfoBlockBlock3BodyResources!
}

type ComponentInfoBlockBlock3BodyResources {
  block: [ComponentInfoBlockBlock3BodyResourcesBlock!]!
  hyperlink: [ComponentInfoBlockBlock3BodyResourcesHyperlink!]!
  inline: [ComponentInfoBlockBlock3BodyResourcesInline!]!
}

type ComponentInfoBlockBlock3BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentInfoBlockBlock3BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentInfoBlockBlock3BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ComponentInfoBlockCollection {
  items: [ComponentInfoBlock]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentInfoBlockFilter {
  AND: [ComponentInfoBlockFilter]
  OR: [ComponentInfoBlockFilter]
  block1Body_contains: String
  block1Body_exists: Boolean
  block1Body_not_contains: String
  block1Image_exists: Boolean
  block2Body_contains: String
  block2Body_exists: Boolean
  block2Body_not_contains: String
  block2Image_exists: Boolean
  block3Body_contains: String
  block3Body_exists: Boolean
  block3Body_not_contains: String
  block3Image_exists: Boolean
  colorPalette: String
  colorPalette_contains: String
  colorPalette_exists: Boolean
  colorPalette_in: [String]
  colorPalette_not: String
  colorPalette_not_contains: String
  colorPalette_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  headline: String
  headline_contains: String
  headline_exists: Boolean
  headline_in: [String]
  headline_not: String
  headline_not_contains: String
  headline_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subline: String
  subline_contains: String
  subline_exists: Boolean
  subline_in: [String]
  subline_not: String
  subline_not_contains: String
  subline_not_in: [String]
  sys: SysFilter
}

type ComponentInfoBlockLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ComponentInfoBlockLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ComponentInfoBlockLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentInfoBlockOrder {
  colorPalette_ASC
  colorPalette_DESC
  headline_ASC
  headline_DESC
  internalName_ASC
  internalName_DESC
  subline_ASC
  subline_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Component that renders products in a table enabling a side-by-side comparison [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/componentProductTable)
"""
type ComponentProductTable implements Entry {
  contentfulMetadata: ContentfulMetadata!
  headline(locale: String): String
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentProductTableLinkingCollections
  productsCollection(limit: Int = 100, locale: String, order: [ComponentProductTableProductsCollectionOrder], preview: Boolean, skip: Int = 0, where: TopicProductFilter): ComponentProductTableProductsCollection
  subline(locale: String): String
  sys: Sys!
}

type ComponentProductTableCollection {
  items: [ComponentProductTable]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentProductTableFilter {
  AND: [ComponentProductTableFilter]
  OR: [ComponentProductTableFilter]
  contentfulMetadata: ContentfulMetadataFilter
  headline: String
  headline_contains: String
  headline_exists: Boolean
  headline_in: [String]
  headline_not: String
  headline_not_contains: String
  headline_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  products: cfTopicProductNestedFilter
  productsCollection_exists: Boolean
  subline: String
  subline_contains: String
  subline_exists: Boolean
  subline_in: [String]
  subline_not: String
  subline_not_contains: String
  subline_not_in: [String]
  sys: SysFilter
}

type ComponentProductTableLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentProductTableOrder {
  headline_ASC
  headline_DESC
  internalName_ASC
  internalName_DESC
  subline_ASC
  subline_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ComponentProductTableProductsCollection {
  items: [TopicProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum ComponentProductTableProductsCollectionOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Full-width component for quotes, reviews and testimonials, includes multiple layout options [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/componentQuote)
"""
type ComponentQuote implements Entry {
  colorPalette(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  image(locale: String, preview: Boolean): Asset
  imagePosition(locale: String): Boolean
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentQuoteLinkingCollections
  quote(locale: String): ComponentQuoteQuote
  quoteAlignment(locale: String): Boolean
  sys: Sys!
}

type ComponentQuoteCollection {
  items: [ComponentQuote]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentQuoteFilter {
  AND: [ComponentQuoteFilter]
  OR: [ComponentQuoteFilter]
  colorPalette: String
  colorPalette_contains: String
  colorPalette_exists: Boolean
  colorPalette_in: [String]
  colorPalette_not: String
  colorPalette_not_contains: String
  colorPalette_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  imagePosition: Boolean
  imagePosition_exists: Boolean
  imagePosition_not: Boolean
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  quoteAlignment: Boolean
  quoteAlignment_exists: Boolean
  quoteAlignment_not: Boolean
  quote_contains: String
  quote_exists: Boolean
  quote_not_contains: String
  sys: SysFilter
}

type ComponentQuoteLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ComponentQuoteLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ComponentQuoteLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentQuoteOrder {
  colorPalette_ASC
  colorPalette_DESC
  imagePosition_ASC
  imagePosition_DESC
  internalName_ASC
  internalName_DESC
  quoteAlignment_ASC
  quoteAlignment_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ComponentQuoteQuote {
  json: JSON!
  links: ComponentQuoteQuoteLinks!
}

type ComponentQuoteQuoteAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentQuoteQuoteEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentQuoteQuoteLinks {
  assets: ComponentQuoteQuoteAssets!
  entries: ComponentQuoteQuoteEntries!
  resources: ComponentQuoteQuoteResources!
}

type ComponentQuoteQuoteResources {
  block: [ComponentQuoteQuoteResourcesBlock!]!
  hyperlink: [ComponentQuoteQuoteResourcesHyperlink!]!
  inline: [ComponentQuoteQuoteResourcesInline!]!
}

type ComponentQuoteQuoteResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentQuoteQuoteResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentQuoteQuoteResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentBlock)
"""
type ContentBlock implements Entry {
  contentBlockCtaCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentBlockContentBlockCtaCollection
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ContentBlockLinkingCollections
  sys: Sys!
  testField(locale: String): String
}

type ContentBlockCollection {
  items: [ContentBlock]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ContentBlockContentBlockCtaCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentBlockFilter {
  AND: [ContentBlockFilter]
  OR: [ContentBlockFilter]
  contentBlockCtaCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  testField: String
  testField_contains: String
  testField_exists: Boolean
  testField_in: [String]
  testField_not: String
  testField_not_contains: String
  testField_not_in: [String]
}

type ContentBlockLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentBlockLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentBlockLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ContentBlockOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  testField_ASC
  testField_DESC
}

"""
Join us! [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentBlok)
"""
type ContentBlok implements Entry {
  block1Body(locale: String): ContentBlokBlock1Body
  block1Image(locale: String, preview: Boolean): Asset
  block2Body(locale: String): ContentBlokBlock2Body
  block2Image(locale: String, preview: Boolean): Asset
  block3Body(locale: String): ContentBlokBlock3Body
  block3Image(locale: String, preview: Boolean): Asset
  buttonLink(locale: String): String
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ContentBlokLinkingCollections
  subtitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type ContentBlokBlock1Body {
  json: JSON!
  links: ContentBlokBlock1BodyLinks!
}

type ContentBlokBlock1BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokBlock1BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokBlock1BodyLinks {
  assets: ContentBlokBlock1BodyAssets!
  entries: ContentBlokBlock1BodyEntries!
  resources: ContentBlokBlock1BodyResources!
}

type ContentBlokBlock1BodyResources {
  block: [ContentBlokBlock1BodyResourcesBlock!]!
  hyperlink: [ContentBlokBlock1BodyResourcesHyperlink!]!
  inline: [ContentBlokBlock1BodyResourcesInline!]!
}

type ContentBlokBlock1BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock1BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock1BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock2Body {
  json: JSON!
  links: ContentBlokBlock2BodyLinks!
}

type ContentBlokBlock2BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokBlock2BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokBlock2BodyLinks {
  assets: ContentBlokBlock2BodyAssets!
  entries: ContentBlokBlock2BodyEntries!
  resources: ContentBlokBlock2BodyResources!
}

type ContentBlokBlock2BodyResources {
  block: [ContentBlokBlock2BodyResourcesBlock!]!
  hyperlink: [ContentBlokBlock2BodyResourcesHyperlink!]!
  inline: [ContentBlokBlock2BodyResourcesInline!]!
}

type ContentBlokBlock2BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock2BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock2BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock3Body {
  json: JSON!
  links: ContentBlokBlock3BodyLinks!
}

type ContentBlokBlock3BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokBlock3BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokBlock3BodyLinks {
  assets: ContentBlokBlock3BodyAssets!
  entries: ContentBlokBlock3BodyEntries!
  resources: ContentBlokBlock3BodyResources!
}

type ContentBlokBlock3BodyResources {
  block: [ContentBlokBlock3BodyResourcesBlock!]!
  hyperlink: [ContentBlokBlock3BodyResourcesHyperlink!]!
  inline: [ContentBlokBlock3BodyResourcesInline!]!
}

type ContentBlokBlock3BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock3BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock3BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokCollection {
  items: [ContentBlok]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentBlokFilter {
  AND: [ContentBlokFilter]
  OR: [ContentBlokFilter]
  block1Body_contains: String
  block1Body_exists: Boolean
  block1Body_not_contains: String
  block1Image_exists: Boolean
  block2Body_contains: String
  block2Body_exists: Boolean
  block2Body_not_contains: String
  block2Image_exists: Boolean
  block3Body_contains: String
  block3Body_exists: Boolean
  block3Body_not_contains: String
  block3Image_exists: Boolean
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ContentBlokLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentBlokLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentBlokLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Enterprise Content Management [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentBlokMetCta)
"""
type ContentBlokMetCta implements Entry {
  blockBody(locale: String): ContentBlokMetCtaBlockBody
  blockImage(locale: String, preview: Boolean): Asset
  blockTitle(locale: String): String
  buttonLink(locale: String): String
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ContentBlokMetCtaLinkingCollections
  sys: Sys!
}

type ContentBlokMetCtaBlockBody {
  json: JSON!
  links: ContentBlokMetCtaBlockBodyLinks!
}

type ContentBlokMetCtaBlockBodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokMetCtaBlockBodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokMetCtaBlockBodyLinks {
  assets: ContentBlokMetCtaBlockBodyAssets!
  entries: ContentBlokMetCtaBlockBodyEntries!
  resources: ContentBlokMetCtaBlockBodyResources!
}

type ContentBlokMetCtaBlockBodyResources {
  block: [ContentBlokMetCtaBlockBodyResourcesBlock!]!
  hyperlink: [ContentBlokMetCtaBlockBodyResourcesHyperlink!]!
  inline: [ContentBlokMetCtaBlockBodyResourcesInline!]!
}

type ContentBlokMetCtaBlockBodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokMetCtaBlockBodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokMetCtaBlockBodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokMetCtaCollection {
  items: [ContentBlokMetCta]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentBlokMetCtaFilter {
  AND: [ContentBlokMetCtaFilter]
  OR: [ContentBlokMetCtaFilter]
  blockBody_contains: String
  blockBody_exists: Boolean
  blockBody_not_contains: String
  blockImage_exists: Boolean
  blockTitle: String
  blockTitle_contains: String
  blockTitle_exists: Boolean
  blockTitle_in: [String]
  blockTitle_not: String
  blockTitle_not_contains: String
  blockTitle_not_in: [String]
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

type ContentBlokMetCtaLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentBlokMetCtaLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentBlokMetCtaLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ContentBlokMetCtaOrder {
  blockTitle_ASC
  blockTitle_DESC
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ContentBlokOrder {
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Expert advice [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentBlokSplit)
"""
type ContentBlokSplit implements Entry {
  backgroundColor(locale: String): String
  backgroundImage(locale: String, preview: Boolean): Asset
  button1(locale: String): ContentBlokSplitButton1
  buttonLink(locale: String): String
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  fullWidth(locale: String): Boolean
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): ContentBlokSplitLinkingCollections
  subtitle(locale: String): String
  sys: Sys!
  text(locale: String): ContentBlokSplitText
  title(locale: String): String
  title2(locale: String): String
}

type ContentBlokSplitButton1 {
  json: JSON!
  links: ContentBlokSplitButton1Links!
}

type ContentBlokSplitButton1Assets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokSplitButton1Entries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokSplitButton1Links {
  assets: ContentBlokSplitButton1Assets!
  entries: ContentBlokSplitButton1Entries!
  resources: ContentBlokSplitButton1Resources!
}

type ContentBlokSplitButton1Resources {
  block: [ContentBlokSplitButton1ResourcesBlock!]!
  hyperlink: [ContentBlokSplitButton1ResourcesHyperlink!]!
  inline: [ContentBlokSplitButton1ResourcesInline!]!
}

type ContentBlokSplitButton1ResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitButton1ResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitButton1ResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitCollection {
  items: [ContentBlokSplit]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentBlokSplitFilter {
  AND: [ContentBlokSplitFilter]
  OR: [ContentBlokSplitFilter]
  backgroundColor: String
  backgroundColor_contains: String
  backgroundColor_exists: Boolean
  backgroundColor_in: [String]
  backgroundColor_not: String
  backgroundColor_not_contains: String
  backgroundColor_not_in: [String]
  backgroundImage_exists: Boolean
  button1_contains: String
  button1_exists: Boolean
  button1_not_contains: String
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fullWidth: Boolean
  fullWidth_exists: Boolean
  fullWidth_not: Boolean
  image_exists: Boolean
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  text_contains: String
  text_exists: Boolean
  text_not_contains: String
  title: String
  title2: String
  title2_contains: String
  title2_exists: Boolean
  title2_in: [String]
  title2_not: String
  title2_not_contains: String
  title2_not_in: [String]
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ContentBlokSplitLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentBlokSplitLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentBlokSplitLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ContentBlokSplitOrder {
  backgroundColor_ASC
  backgroundColor_DESC
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  fullWidth_ASC
  fullWidth_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title2_ASC
  title2_DESC
  title_ASC
  title_DESC
}

type ContentBlokSplitText {
  json: JSON!
  links: ContentBlokSplitTextLinks!
}

type ContentBlokSplitTextAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokSplitTextEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokSplitTextLinks {
  assets: ContentBlokSplitTextAssets!
  entries: ContentBlokSplitTextEntries!
  resources: ContentBlokSplitTextResources!
}

type ContentBlokSplitTextResources {
  block: [ContentBlokSplitTextResourcesBlock!]!
  hyperlink: [ContentBlokSplitTextResourcesHyperlink!]!
  inline: [ContentBlokSplitTextResourcesInline!]!
}

type ContentBlokSplitTextResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitTextResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitTextResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

"""
Why AmeXio [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentCarousel)
"""
type ContentCarousel implements Entry {
  autoplay(locale: String): Boolean
  backgroundColor(locale: String): String
  block2Body(locale: String): ContentCarouselBlock2Body
  block2Image(locale: String, preview: Boolean): Asset
  block3Body(locale: String): ContentCarouselBlock3Body
  block3Image(locale: String, preview: Boolean): Asset
  blockBody(locale: String): ContentCarouselBlockBody
  blockImage(locale: String, preview: Boolean): Asset
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ContentCarouselLinkingCollections
  subtitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type ContentCarouselBlock2Body {
  json: JSON!
  links: ContentCarouselBlock2BodyLinks!
}

type ContentCarouselBlock2BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentCarouselBlock2BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentCarouselBlock2BodyLinks {
  assets: ContentCarouselBlock2BodyAssets!
  entries: ContentCarouselBlock2BodyEntries!
  resources: ContentCarouselBlock2BodyResources!
}

type ContentCarouselBlock2BodyResources {
  block: [ContentCarouselBlock2BodyResourcesBlock!]!
  hyperlink: [ContentCarouselBlock2BodyResourcesHyperlink!]!
  inline: [ContentCarouselBlock2BodyResourcesInline!]!
}

type ContentCarouselBlock2BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock2BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock2BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock3Body {
  json: JSON!
  links: ContentCarouselBlock3BodyLinks!
}

type ContentCarouselBlock3BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentCarouselBlock3BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentCarouselBlock3BodyLinks {
  assets: ContentCarouselBlock3BodyAssets!
  entries: ContentCarouselBlock3BodyEntries!
  resources: ContentCarouselBlock3BodyResources!
}

type ContentCarouselBlock3BodyResources {
  block: [ContentCarouselBlock3BodyResourcesBlock!]!
  hyperlink: [ContentCarouselBlock3BodyResourcesHyperlink!]!
  inline: [ContentCarouselBlock3BodyResourcesInline!]!
}

type ContentCarouselBlock3BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock3BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock3BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlockBody {
  json: JSON!
  links: ContentCarouselBlockBodyLinks!
}

type ContentCarouselBlockBodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentCarouselBlockBodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentCarouselBlockBodyLinks {
  assets: ContentCarouselBlockBodyAssets!
  entries: ContentCarouselBlockBodyEntries!
  resources: ContentCarouselBlockBodyResources!
}

type ContentCarouselBlockBodyResources {
  block: [ContentCarouselBlockBodyResourcesBlock!]!
  hyperlink: [ContentCarouselBlockBodyResourcesHyperlink!]!
  inline: [ContentCarouselBlockBodyResourcesInline!]!
}

type ContentCarouselBlockBodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlockBodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlockBodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselCollection {
  items: [ContentCarousel]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentCarouselFilter {
  AND: [ContentCarouselFilter]
  OR: [ContentCarouselFilter]
  autoplay: Boolean
  autoplay_exists: Boolean
  autoplay_not: Boolean
  backgroundColor: String
  backgroundColor_contains: String
  backgroundColor_exists: Boolean
  backgroundColor_in: [String]
  backgroundColor_not: String
  backgroundColor_not_contains: String
  backgroundColor_not_in: [String]
  block2Body_contains: String
  block2Body_exists: Boolean
  block2Body_not_contains: String
  block2Image_exists: Boolean
  block3Body_contains: String
  block3Body_exists: Boolean
  block3Body_not_contains: String
  block3Image_exists: Boolean
  blockBody_contains: String
  blockBody_exists: Boolean
  blockBody_not_contains: String
  blockImage_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ContentCarouselLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentCarouselLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentCarouselLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ContentCarouselOrder {
  autoplay_ASC
  autoplay_DESC
  backgroundColor_ASC
  backgroundColor_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Navigation content type used for powering the Footer menu [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/footerMenu)
"""
type FooterMenu implements Entry {
  contentfulMetadata: ContentfulMetadata!
  facebookLink(locale: String): String
  instagramLink(locale: String): String
  internalName(locale: String): String
  legalLinks(locale: String, preview: Boolean, where: MenuGroupFilter): MenuGroup
  linkedFrom(allowedLocales: [String]): FooterMenuLinkingCollections
  linkedinLink(locale: String): String
  menuItemsCollection(limit: Int = 100, locale: String, order: [FooterMenuMenuItemsCollectionOrder], preview: Boolean, skip: Int = 0, where: MenuGroupFilter): FooterMenuMenuItemsCollection
  sys: Sys!
  twitterLink(locale: String): String
}

type FooterMenuCollection {
  items: [FooterMenu]!
  limit: Int!
  skip: Int!
  total: Int!
}

input FooterMenuFilter {
  AND: [FooterMenuFilter]
  OR: [FooterMenuFilter]
  contentfulMetadata: ContentfulMetadataFilter
  facebookLink: String
  facebookLink_contains: String
  facebookLink_exists: Boolean
  facebookLink_in: [String]
  facebookLink_not: String
  facebookLink_not_contains: String
  facebookLink_not_in: [String]
  instagramLink: String
  instagramLink_contains: String
  instagramLink_exists: Boolean
  instagramLink_in: [String]
  instagramLink_not: String
  instagramLink_not_contains: String
  instagramLink_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  legalLinks: cfMenuGroupNestedFilter
  legalLinks_exists: Boolean
  linkedinLink: String
  linkedinLink_contains: String
  linkedinLink_exists: Boolean
  linkedinLink_in: [String]
  linkedinLink_not: String
  linkedinLink_not_contains: String
  linkedinLink_not_in: [String]
  menuItems: cfMenuGroupNestedFilter
  menuItemsCollection_exists: Boolean
  sys: SysFilter
  twitterLink: String
  twitterLink_contains: String
  twitterLink_exists: Boolean
  twitterLink_in: [String]
  twitterLink_not: String
  twitterLink_not_contains: String
  twitterLink_not_in: [String]
}

type FooterMenuLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type FooterMenuMenuItemsCollection {
  items: [MenuGroup]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum FooterMenuMenuItemsCollectionOrder {
  groupName_ASC
  groupName_DESC
  internalTitle_ASC
  internalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum FooterMenuOrder {
  facebookLink_ASC
  facebookLink_DESC
  instagramLink_ASC
  instagramLink_DESC
  internalName_ASC
  internalName_DESC
  linkedinLink_ASC
  linkedinLink_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  twitterLink_ASC
  twitterLink_DESC
}

"""
Your Partner in Digital Transformation [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/heroBanner)
"""
type HeroBanner implements Entry {
  backgroundImage(locale: String, preview: Boolean): Asset
  buttonLink(locale: String): String
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  fullWidth(locale: String): Boolean
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): HeroBannerLinkingCollections
  subtitle(locale: String): HeroBannerSubtitle
  sys: Sys!
  test(locale: String): Int
  testmeer(locale: String, preview: Boolean, where: AuthorFilter): Author
  title(locale: String): String
}

type HeroBannerCollection {
  items: [HeroBanner]!
  limit: Int!
  skip: Int!
  total: Int!
}

input HeroBannerFilter {
  AND: [HeroBannerFilter]
  OR: [HeroBannerFilter]
  backgroundImage_exists: Boolean
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fullWidth: Boolean
  fullWidth_exists: Boolean
  fullWidth_not: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_not_contains: String
  sys: SysFilter
  test: Int
  test_exists: Boolean
  test_gt: Int
  test_gte: Int
  test_in: [Int]
  test_lt: Int
  test_lte: Int
  test_not: Int
  test_not_in: [Int]
  testmeer: cfAuthorNestedFilter
  testmeer_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type HeroBannerLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [HeroBannerLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum HeroBannerLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum HeroBannerOrder {
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  fullWidth_ASC
  fullWidth_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  test_ASC
  test_DESC
  title_ASC
  title_DESC
}

type HeroBannerSubtitle {
  json: JSON!
  links: HeroBannerSubtitleLinks!
}

type HeroBannerSubtitleAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type HeroBannerSubtitleEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type HeroBannerSubtitleLinks {
  assets: HeroBannerSubtitleAssets!
  entries: HeroBannerSubtitleEntries!
  resources: HeroBannerSubtitleResources!
}

type HeroBannerSubtitleResources {
  block: [HeroBannerSubtitleResourcesBlock!]!
  hyperlink: [HeroBannerSubtitleResourcesHyperlink!]!
  inline: [HeroBannerSubtitleResourcesInline!]!
}

type HeroBannerSubtitleResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type HeroBannerSubtitleResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type HeroBannerSubtitleResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

"""
Logo carousel [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/imageCarousel)
"""
type ImageCarousel implements Entry {
  autoplay(locale: String): Boolean
  contentfulMetadata: ContentfulMetadata!
  imageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  linkedFrom(allowedLocales: [String]): ImageCarouselLinkingCollections
  sys: Sys!
}

type ImageCarouselCollection {
  items: [ImageCarousel]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ImageCarouselFilter {
  AND: [ImageCarouselFilter]
  OR: [ImageCarouselFilter]
  autoplay: Boolean
  autoplay_exists: Boolean
  autoplay_not: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  imageCollection_exists: Boolean
  sys: SysFilter
}

type ImageCarouselLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ImageCarouselLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ImageCarouselLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ImageCarouselOrder {
  autoplay_ASC
  autoplay_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
A group of items making up a section in the navigation menu [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/menuGroup)
"""
type MenuGroup implements Entry {
  contentfulMetadata: ContentfulMetadata!
  featuredPagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: MenuGroupFeaturedPagesFilter): MenuGroupFeaturedPagesCollection
  groupLink(locale: String, preview: Boolean, where: MenuGroupGroupLinkFilter): MenuGroupGroupLink
  groupName(locale: String): String
  internalTitle(locale: String): String
  linkedFrom(allowedLocales: [String]): MenuGroupLinkingCollections
  sys: Sys!
}

type MenuGroupCollection {
  items: [MenuGroup]!
  limit: Int!
  skip: Int!
  total: Int!
}

type MenuGroupFeaturedPagesCollection {
  items: [MenuGroupFeaturedPagesItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MenuGroupFeaturedPagesFilter {
  AND: [MenuGroupFeaturedPagesFilter]
  OR: [MenuGroupFeaturedPagesFilter]
  contentfulMetadata: ContentfulMetadataFilter
  extraSection: cfextraSectionMultiTypeNestedFilter
  extraSectionCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  pageContent: cfpageContentMultiTypeNestedFilter
  pageContentCollection_exists: Boolean
  pageName: String
  pageName_contains: String
  pageName_exists: Boolean
  pageName_in: [String]
  pageName_not: String
  pageName_not_contains: String
  pageName_not_in: [String]
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  topSection: cftopSectionMultiTypeNestedFilter
  topSectionCollection_exists: Boolean
}

union MenuGroupFeaturedPagesItem = Page

input MenuGroupFilter {
  AND: [MenuGroupFilter]
  OR: [MenuGroupFilter]
  contentfulMetadata: ContentfulMetadataFilter
  featuredPages: cffeaturedPagesMultiTypeNestedFilter
  featuredPagesCollection_exists: Boolean
  groupLink: cfgroupLinkMultiTypeNestedFilter
  groupLink_exists: Boolean
  groupName: String
  groupName_contains: String
  groupName_exists: Boolean
  groupName_in: [String]
  groupName_not: String
  groupName_not_contains: String
  groupName_not_in: [String]
  internalTitle: String
  internalTitle_contains: String
  internalTitle_exists: Boolean
  internalTitle_in: [String]
  internalTitle_not: String
  internalTitle_not_contains: String
  internalTitle_not_in: [String]
  sys: SysFilter
}

union MenuGroupGroupLink = Page

input MenuGroupGroupLinkFilter {
  AND: [MenuGroupGroupLinkFilter]
  OR: [MenuGroupGroupLinkFilter]
  contentfulMetadata: ContentfulMetadataFilter
  extraSection: cfextraSectionMultiTypeNestedFilter
  extraSectionCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  pageContent: cfpageContentMultiTypeNestedFilter
  pageContentCollection_exists: Boolean
  pageName: String
  pageName_contains: String
  pageName_exists: Boolean
  pageName_in: [String]
  pageName_not: String
  pageName_not_contains: String
  pageName_not_in: [String]
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  topSection: cftopSectionMultiTypeNestedFilter
  topSectionCollection_exists: Boolean
}

type MenuGroupLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  footerMenuCollection(limit: Int = 100, locale: String, order: [MenuGroupLinkingCollectionsFooterMenuCollectionOrder], preview: Boolean, skip: Int = 0): FooterMenuCollection
  navigationMenuCollection(limit: Int = 100, locale: String, order: [MenuGroupLinkingCollectionsNavigationMenuCollectionOrder], preview: Boolean, skip: Int = 0): NavigationMenuCollection
}

enum MenuGroupLinkingCollectionsFooterMenuCollectionOrder {
  facebookLink_ASC
  facebookLink_DESC
  instagramLink_ASC
  instagramLink_DESC
  internalName_ASC
  internalName_DESC
  linkedinLink_ASC
  linkedinLink_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  twitterLink_ASC
  twitterLink_DESC
}

enum MenuGroupLinkingCollectionsNavigationMenuCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum MenuGroupOrder {
  groupName_ASC
  groupName_DESC
  internalTitle_ASC
  internalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Navigation menu in the header [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/navigationMenu)
"""
type NavigationMenu implements Entry {
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): NavigationMenuLinkingCollections
  menuItemsCollection(limit: Int = 100, locale: String, order: [NavigationMenuMenuItemsCollectionOrder], preview: Boolean, skip: Int = 0, where: MenuGroupFilter): NavigationMenuMenuItemsCollection
  sys: Sys!
}

type NavigationMenuCollection {
  items: [NavigationMenu]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavigationMenuFilter {
  AND: [NavigationMenuFilter]
  OR: [NavigationMenuFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  menuItems: cfMenuGroupNestedFilter
  menuItemsCollection_exists: Boolean
  sys: SysFilter
}

type NavigationMenuLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type NavigationMenuMenuItemsCollection {
  items: [MenuGroup]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum NavigationMenuMenuItemsCollectionOrder {
  groupName_ASC
  groupName_DESC
  internalTitle_ASC
  internalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum NavigationMenuOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Container that enables editors to publish a page, define its slug, select & arrange its content [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/page)
"""
type Page implements Entry {
  contentfulMetadata: ContentfulMetadata!
  extraSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: PageExtraSectionFilter): PageExtraSectionCollection
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageLinkingCollections
  pageContentCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: PagePageContentFilter): PagePageContentCollection
  pageName(locale: String): String
  seo(locale: String, preview: Boolean, where: SeoFilter): Seo
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
  topSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: PageTopSectionFilter): PageTopSectionCollection
}

type PageCollection {
  items: [Page]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageExtraSectionCollection {
  items: [PageExtraSectionItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageExtraSectionFilter {
  AND: [PageExtraSectionFilter]
  OR: [PageExtraSectionFilter]
  colorPalette: String
  colorPalette_contains: String
  colorPalette_exists: Boolean
  colorPalette_in: [String]
  colorPalette_not: String
  colorPalette_not_contains: String
  colorPalette_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

union PageExtraSectionItem = ComponentCta | ComponentDuplex | ComponentHeroBanner | ComponentInfoBlock | ComponentQuote

input PageFilter {
  AND: [PageFilter]
  OR: [PageFilter]
  contentfulMetadata: ContentfulMetadataFilter
  extraSection: cfextraSectionMultiTypeNestedFilter
  extraSectionCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  pageContent: cfpageContentMultiTypeNestedFilter
  pageContentCollection_exists: Boolean
  pageName: String
  pageName_contains: String
  pageName_exists: Boolean
  pageName_in: [String]
  pageName_not: String
  pageName_not_contains: String
  pageName_not_in: [String]
  seo: cfSeoNestedFilter
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  topSection: cftopSectionMultiTypeNestedFilter
  topSectionCollection_exists: Boolean
}

type PageLinkingCollections {
  componentCtaCollection(limit: Int = 100, locale: String, order: [PageLinkingCollectionsComponentCtaCollectionOrder], preview: Boolean, skip: Int = 0): ComponentCtaCollection
  componentDuplexCollection(limit: Int = 100, locale: String, order: [PageLinkingCollectionsComponentDuplexCollectionOrder], preview: Boolean, skip: Int = 0): ComponentDuplexCollection
  componentHeroBannerCollection(limit: Int = 100, locale: String, order: [PageLinkingCollectionsComponentHeroBannerCollectionOrder], preview: Boolean, skip: Int = 0): ComponentHeroBannerCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  menuGroupCollection(limit: Int = 100, locale: String, order: [PageLinkingCollectionsMenuGroupCollectionOrder], preview: Boolean, skip: Int = 0): MenuGroupCollection
}

enum PageLinkingCollectionsComponentCtaCollectionOrder {
  colorPalette_ASC
  colorPalette_DESC
  ctaText_ASC
  ctaText_DESC
  headline_ASC
  headline_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  urlParameters_ASC
  urlParameters_DESC
}

enum PageLinkingCollectionsComponentDuplexCollectionOrder {
  colorPalette_ASC
  colorPalette_DESC
  containerLayout_ASC
  containerLayout_DESC
  ctaText_ASC
  ctaText_DESC
  headline_ASC
  headline_DESC
  imageStyle_ASC
  imageStyle_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageLinkingCollectionsComponentHeroBannerCollectionOrder {
  colorPalette_ASC
  colorPalette_DESC
  ctaText_ASC
  ctaText_DESC
  headline_ASC
  headline_DESC
  heroSize_ASC
  heroSize_DESC
  imageStyle_ASC
  imageStyle_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageLinkingCollectionsMenuGroupCollectionOrder {
  groupName_ASC
  groupName_DESC
  internalTitle_ASC
  internalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PagePageContentCollection {
  items: [PagePageContentItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PagePageContentFilter {
  AND: [PagePageContentFilter]
  OR: [PagePageContentFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

union PagePageContentItem = ContentBlock | ContentBlok | ContentBlokMetCta | ContentBlokSplit | ContentCarousel | HeroBanner | ImageCarousel | TextBanner | Title

type PageTopSectionCollection {
  items: [PageTopSectionItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageTopSectionFilter {
  AND: [PageTopSectionFilter]
  OR: [PageTopSectionFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

union PageTopSectionItem = ComponentCta | ComponentDuplex | ComponentHeroBanner | ComponentInfoBlock | ComponentQuote | HeroBanner

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  author(id: String!, locale: String, preview: Boolean): Author
  authorCollection(limit: Int = 100, locale: String, order: [AuthorOrder], preview: Boolean, skip: Int = 0, where: AuthorFilter): AuthorCollection
  componentCta(id: String!, locale: String, preview: Boolean): ComponentCta
  componentCtaCollection(limit: Int = 100, locale: String, order: [ComponentCtaOrder], preview: Boolean, skip: Int = 0, where: ComponentCtaFilter): ComponentCtaCollection
  componentDemo(id: String!, locale: String, preview: Boolean): ComponentDemo
  componentDemoCollection(limit: Int = 100, locale: String, order: [ComponentDemoOrder], preview: Boolean, skip: Int = 0, where: ComponentDemoFilter): ComponentDemoCollection
  componentDuplex(id: String!, locale: String, preview: Boolean): ComponentDuplex
  componentDuplexCollection(limit: Int = 100, locale: String, order: [ComponentDuplexOrder], preview: Boolean, skip: Int = 0, where: ComponentDuplexFilter): ComponentDuplexCollection
  componentHeroBanner(id: String!, locale: String, preview: Boolean): ComponentHeroBanner
  componentHeroBannerCollection(limit: Int = 100, locale: String, order: [ComponentHeroBannerOrder], preview: Boolean, skip: Int = 0, where: ComponentHeroBannerFilter): ComponentHeroBannerCollection
  componentInfoBlock(id: String!, locale: String, preview: Boolean): ComponentInfoBlock
  componentInfoBlockCollection(limit: Int = 100, locale: String, order: [ComponentInfoBlockOrder], preview: Boolean, skip: Int = 0, where: ComponentInfoBlockFilter): ComponentInfoBlockCollection
  componentProductTable(id: String!, locale: String, preview: Boolean): ComponentProductTable
  componentProductTableCollection(limit: Int = 100, locale: String, order: [ComponentProductTableOrder], preview: Boolean, skip: Int = 0, where: ComponentProductTableFilter): ComponentProductTableCollection
  componentQuote(id: String!, locale: String, preview: Boolean): ComponentQuote
  componentQuoteCollection(limit: Int = 100, locale: String, order: [ComponentQuoteOrder], preview: Boolean, skip: Int = 0, where: ComponentQuoteFilter): ComponentQuoteCollection
  contentBlock(id: String!, locale: String, preview: Boolean): ContentBlock
  contentBlockCollection(limit: Int = 100, locale: String, order: [ContentBlockOrder], preview: Boolean, skip: Int = 0, where: ContentBlockFilter): ContentBlockCollection
  contentBlok(id: String!, locale: String, preview: Boolean): ContentBlok
  contentBlokCollection(limit: Int = 100, locale: String, order: [ContentBlokOrder], preview: Boolean, skip: Int = 0, where: ContentBlokFilter): ContentBlokCollection
  contentBlokMetCta(id: String!, locale: String, preview: Boolean): ContentBlokMetCta
  contentBlokMetCtaCollection(limit: Int = 100, locale: String, order: [ContentBlokMetCtaOrder], preview: Boolean, skip: Int = 0, where: ContentBlokMetCtaFilter): ContentBlokMetCtaCollection
  contentBlokSplit(id: String!, locale: String, preview: Boolean): ContentBlokSplit
  contentBlokSplitCollection(limit: Int = 100, locale: String, order: [ContentBlokSplitOrder], preview: Boolean, skip: Int = 0, where: ContentBlokSplitFilter): ContentBlokSplitCollection
  contentCarousel(id: String!, locale: String, preview: Boolean): ContentCarousel
  contentCarouselCollection(limit: Int = 100, locale: String, order: [ContentCarouselOrder], preview: Boolean, skip: Int = 0, where: ContentCarouselFilter): ContentCarouselCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  footerMenu(id: String!, locale: String, preview: Boolean): FooterMenu
  footerMenuCollection(limit: Int = 100, locale: String, order: [FooterMenuOrder], preview: Boolean, skip: Int = 0, where: FooterMenuFilter): FooterMenuCollection
  heroBanner(id: String!, locale: String, preview: Boolean): HeroBanner
  heroBannerCollection(limit: Int = 100, locale: String, order: [HeroBannerOrder], preview: Boolean, skip: Int = 0, where: HeroBannerFilter): HeroBannerCollection
  imageCarousel(id: String!, locale: String, preview: Boolean): ImageCarousel
  imageCarouselCollection(limit: Int = 100, locale: String, order: [ImageCarouselOrder], preview: Boolean, skip: Int = 0, where: ImageCarouselFilter): ImageCarouselCollection
  menuGroup(id: String!, locale: String, preview: Boolean): MenuGroup
  menuGroupCollection(limit: Int = 100, locale: String, order: [MenuGroupOrder], preview: Boolean, skip: Int = 0, where: MenuGroupFilter): MenuGroupCollection
  navigationMenu(id: String!, locale: String, preview: Boolean): NavigationMenu
  navigationMenuCollection(limit: Int = 100, locale: String, order: [NavigationMenuOrder], preview: Boolean, skip: Int = 0, where: NavigationMenuFilter): NavigationMenuCollection
  page(id: String!, locale: String, preview: Boolean): Page
  pageCollection(limit: Int = 100, locale: String, order: [PageOrder], preview: Boolean, skip: Int = 0, where: PageFilter): PageCollection
  seo(id: String!, locale: String, preview: Boolean): Seo
  seoCollection(limit: Int = 100, locale: String, order: [SeoOrder], preview: Boolean, skip: Int = 0, where: SeoFilter): SeoCollection
  textBanner(id: String!, locale: String, preview: Boolean): TextBanner
  textBannerCollection(limit: Int = 100, locale: String, order: [TextBannerOrder], preview: Boolean, skip: Int = 0, where: TextBannerFilter): TextBannerCollection
  title(id: String!, locale: String, preview: Boolean): Title
  titleCollection(limit: Int = 100, locale: String, order: [TitleOrder], preview: Boolean, skip: Int = 0, where: TitleFilter): TitleCollection
  topicPerson(id: String!, locale: String, preview: Boolean): TopicPerson
  topicPersonCollection(limit: Int = 100, locale: String, order: [TopicPersonOrder], preview: Boolean, skip: Int = 0, where: TopicPersonFilter): TopicPersonCollection
  topicProduct(id: String!, locale: String, preview: Boolean): TopicProduct
  topicProductCollection(limit: Int = 100, locale: String, order: [TopicProductOrder], preview: Boolean, skip: Int = 0, where: TopicProductFilter): TopicProductCollection
  topicProductFeature(id: String!, locale: String, preview: Boolean): TopicProductFeature
  topicProductFeatureCollection(limit: Int = 100, locale: String, order: [TopicProductFeatureOrder], preview: Boolean, skip: Int = 0, where: TopicProductFeatureFilter): TopicProductFeatureCollection
}

interface ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  urn: String!
}

"""
Open Graph (OG) meta tags for optimizing SEO visibility [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/seo)
"""
type Seo implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): SeoLinkingCollections
  name(locale: String): String
  noFollow(locale: String): Boolean
  noIndex(locale: String): Boolean
  sys: Sys!
  title(locale: String): String
}

type SeoCollection {
  items: [Seo]!
  limit: Int!
  skip: Int!
  total: Int!
}

input SeoFilter {
  AND: [SeoFilter]
  OR: [SeoFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  image_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  noFollow: Boolean
  noFollow_exists: Boolean
  noFollow_not: Boolean
  noIndex: Boolean
  noIndex_exists: Boolean
  noIndex_not: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type SeoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [SeoLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum SeoLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum SeoOrder {
  description_ASC
  description_DESC
  name_ASC
  name_DESC
  noFollow_ASC
  noFollow_DESC
  noIndex_ASC
  noIndex_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
A full width banner with title and description. [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/textBanner)
"""
type TextBanner implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  linkedFrom(allowedLocales: [String]): TextBannerLinkingCollections
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type TextBannerCollection {
  items: [TextBanner]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TextBannerFilter {
  AND: [TextBannerFilter]
  OR: [TextBannerFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type TextBannerLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [TextBannerLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum TextBannerLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum TextBannerOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
How we help businesses with their digital growth [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/title)
"""
type Title implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): TitleLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type TitleCollection {
  items: [Title]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TitleFilter {
  AND: [TitleFilter]
  OR: [TitleFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type TitleLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [TitleLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum TitleLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum TitleOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Container for holding info about people (article authors, company leadership, quoted customers, etc.) [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/topicPerson)
"""
type TopicPerson implements Entry {
  avatar(locale: String, preview: Boolean): Asset
  bio(locale: String): TopicPersonBio
  cardStyle(locale: String): Boolean
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): TopicPersonLinkingCollections
  location(locale: String): String
  name(locale: String): String
  sys: Sys!
  website(locale: String): String
}

type TopicPersonBio {
  json: JSON!
  links: TopicPersonBioLinks!
}

type TopicPersonBioAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type TopicPersonBioEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type TopicPersonBioLinks {
  assets: TopicPersonBioAssets!
  entries: TopicPersonBioEntries!
  resources: TopicPersonBioResources!
}

type TopicPersonBioResources {
  block: [TopicPersonBioResourcesBlock!]!
  hyperlink: [TopicPersonBioResourcesHyperlink!]!
  inline: [TopicPersonBioResourcesInline!]!
}

type TopicPersonBioResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type TopicPersonBioResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type TopicPersonBioResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type TopicPersonCollection {
  items: [TopicPerson]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TopicPersonFilter {
  AND: [TopicPersonFilter]
  OR: [TopicPersonFilter]
  avatar_exists: Boolean
  bio_contains: String
  bio_exists: Boolean
  bio_not_contains: String
  cardStyle: Boolean
  cardStyle_exists: Boolean
  cardStyle_not: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  location: String
  location_contains: String
  location_exists: Boolean
  location_in: [String]
  location_not: String
  location_not_contains: String
  location_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
  website: String
  website_contains: String
  website_exists: Boolean
  website_in: [String]
  website_not: String
  website_not_contains: String
  website_not_in: [String]
}

type TopicPersonLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum TopicPersonOrder {
  cardStyle_ASC
  cardStyle_DESC
  internalName_ASC
  internalName_DESC
  location_ASC
  location_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  website_ASC
  website_DESC
}

"""
Container for product-specific information like card definitions, features, benefits, prices & more [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/topicProduct)
"""
type TopicProduct implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): TopicProductDescription
  featuredImage(locale: String, preview: Boolean): Asset
  featuresCollection(limit: Int = 100, locale: String, order: [TopicProductFeaturesCollectionOrder], preview: Boolean, skip: Int = 0, where: TopicProductFeatureFilter): TopicProductFeaturesCollection
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): TopicProductLinkingCollections
  name(locale: String): String
  price(locale: String): Float
  sys: Sys!
}

type TopicProductCollection {
  items: [TopicProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

type TopicProductDescription {
  json: JSON!
  links: TopicProductDescriptionLinks!
}

type TopicProductDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type TopicProductDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type TopicProductDescriptionLinks {
  assets: TopicProductDescriptionAssets!
  entries: TopicProductDescriptionEntries!
  resources: TopicProductDescriptionResources!
}

type TopicProductDescriptionResources {
  block: [TopicProductDescriptionResourcesBlock!]!
  hyperlink: [TopicProductDescriptionResourcesHyperlink!]!
  inline: [TopicProductDescriptionResourcesInline!]!
}

type TopicProductDescriptionResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type TopicProductDescriptionResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type TopicProductDescriptionResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

"""
Sub-container for product features enabling re-use of generic features across different products [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/topicProductFeature)
"""
type TopicProductFeature implements Entry {
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): TopicProductFeatureLinkingCollections
  longDescription(locale: String): TopicProductFeatureLongDescription
  name(locale: String): String
  shortDescription(locale: String): TopicProductFeatureShortDescription
  sys: Sys!
}

type TopicProductFeatureCollection {
  items: [TopicProductFeature]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TopicProductFeatureFilter {
  AND: [TopicProductFeatureFilter]
  OR: [TopicProductFeatureFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  longDescription_contains: String
  longDescription_exists: Boolean
  longDescription_not_contains: String
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  shortDescription_contains: String
  shortDescription_exists: Boolean
  shortDescription_not_contains: String
  sys: SysFilter
}

type TopicProductFeatureLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  topicProductCollection(limit: Int = 100, locale: String, order: [TopicProductFeatureLinkingCollectionsTopicProductCollectionOrder], preview: Boolean, skip: Int = 0): TopicProductCollection
}

enum TopicProductFeatureLinkingCollectionsTopicProductCollectionOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type TopicProductFeatureLongDescription {
  json: JSON!
  links: TopicProductFeatureLongDescriptionLinks!
}

type TopicProductFeatureLongDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type TopicProductFeatureLongDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type TopicProductFeatureLongDescriptionLinks {
  assets: TopicProductFeatureLongDescriptionAssets!
  entries: TopicProductFeatureLongDescriptionEntries!
  resources: TopicProductFeatureLongDescriptionResources!
}

type TopicProductFeatureLongDescriptionResources {
  block: [TopicProductFeatureLongDescriptionResourcesBlock!]!
  hyperlink: [TopicProductFeatureLongDescriptionResourcesHyperlink!]!
  inline: [TopicProductFeatureLongDescriptionResourcesInline!]!
}

type TopicProductFeatureLongDescriptionResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type TopicProductFeatureLongDescriptionResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type TopicProductFeatureLongDescriptionResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

enum TopicProductFeatureOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type TopicProductFeatureShortDescription {
  json: JSON!
  links: TopicProductFeatureShortDescriptionLinks!
}

type TopicProductFeatureShortDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type TopicProductFeatureShortDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type TopicProductFeatureShortDescriptionLinks {
  assets: TopicProductFeatureShortDescriptionAssets!
  entries: TopicProductFeatureShortDescriptionEntries!
  resources: TopicProductFeatureShortDescriptionResources!
}

type TopicProductFeatureShortDescriptionResources {
  block: [TopicProductFeatureShortDescriptionResourcesBlock!]!
  hyperlink: [TopicProductFeatureShortDescriptionResourcesHyperlink!]!
  inline: [TopicProductFeatureShortDescriptionResourcesInline!]!
}

type TopicProductFeatureShortDescriptionResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type TopicProductFeatureShortDescriptionResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type TopicProductFeatureShortDescriptionResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type TopicProductFeaturesCollection {
  items: [TopicProductFeature]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum TopicProductFeaturesCollectionOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input TopicProductFilter {
  AND: [TopicProductFilter]
  OR: [TopicProductFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  featuredImage_exists: Boolean
  features: cfTopicProductFeatureNestedFilter
  featuresCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  price: Float
  price_exists: Boolean
  price_gt: Float
  price_gte: Float
  price_in: [Float]
  price_lt: Float
  price_lte: Float
  price_not: Float
  price_not_in: [Float]
  sys: SysFilter
}

type TopicProductLinkingCollections {
  componentProductTableCollection(limit: Int = 100, locale: String, order: [TopicProductLinkingCollectionsComponentProductTableCollectionOrder], preview: Boolean, skip: Int = 0): ComponentProductTableCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum TopicProductLinkingCollectionsComponentProductTableCollectionOrder {
  headline_ASC
  headline_DESC
  internalName_ASC
  internalName_DESC
  subline_ASC
  subline_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TopicProductOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

interface _Node {
  _id: ID!
}

input cfAuthorNestedFilter {
  AND: [cfAuthorNestedFilter]
  OR: [cfAuthorNestedFilter]
  avatar_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

input cfMenuGroupNestedFilter {
  AND: [cfMenuGroupNestedFilter]
  OR: [cfMenuGroupNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  featuredPagesCollection_exists: Boolean
  groupLink_exists: Boolean
  groupName: String
  groupName_contains: String
  groupName_exists: Boolean
  groupName_in: [String]
  groupName_not: String
  groupName_not_contains: String
  groupName_not_in: [String]
  internalTitle: String
  internalTitle_contains: String
  internalTitle_exists: Boolean
  internalTitle_in: [String]
  internalTitle_not: String
  internalTitle_not_contains: String
  internalTitle_not_in: [String]
  sys: SysFilter
}

input cfSeoNestedFilter {
  AND: [cfSeoNestedFilter]
  OR: [cfSeoNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  image_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  noFollow: Boolean
  noFollow_exists: Boolean
  noFollow_not: Boolean
  noIndex: Boolean
  noIndex_exists: Boolean
  noIndex_not: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfTopicProductFeatureNestedFilter {
  AND: [cfTopicProductFeatureNestedFilter]
  OR: [cfTopicProductFeatureNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  longDescription_contains: String
  longDescription_exists: Boolean
  longDescription_not_contains: String
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  shortDescription_contains: String
  shortDescription_exists: Boolean
  shortDescription_not_contains: String
  sys: SysFilter
}

input cfTopicProductNestedFilter {
  AND: [cfTopicProductNestedFilter]
  OR: [cfTopicProductNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  featuredImage_exists: Boolean
  featuresCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  price: Float
  price_exists: Boolean
  price_gt: Float
  price_gte: Float
  price_in: [Float]
  price_lt: Float
  price_lte: Float
  price_not: Float
  price_not_in: [Float]
  sys: SysFilter
}

input cfextraSectionMultiTypeNestedFilter {
  AND: [cfextraSectionMultiTypeNestedFilter]
  OR: [cfextraSectionMultiTypeNestedFilter]
  colorPalette: String
  colorPalette_contains: String
  colorPalette_exists: Boolean
  colorPalette_in: [String]
  colorPalette_not: String
  colorPalette_not_contains: String
  colorPalette_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

input cffeaturedPagesMultiTypeNestedFilter {
  AND: [cffeaturedPagesMultiTypeNestedFilter]
  OR: [cffeaturedPagesMultiTypeNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  extraSectionCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  pageContentCollection_exists: Boolean
  pageName: String
  pageName_contains: String
  pageName_exists: Boolean
  pageName_in: [String]
  pageName_not: String
  pageName_not_contains: String
  pageName_not_in: [String]
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  topSectionCollection_exists: Boolean
}

input cfgroupLinkMultiTypeNestedFilter {
  AND: [cfgroupLinkMultiTypeNestedFilter]
  OR: [cfgroupLinkMultiTypeNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  extraSectionCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  pageContentCollection_exists: Boolean
  pageName: String
  pageName_contains: String
  pageName_exists: Boolean
  pageName_in: [String]
  pageName_not: String
  pageName_not_contains: String
  pageName_not_in: [String]
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  topSectionCollection_exists: Boolean
}

input cfpageContentMultiTypeNestedFilter {
  AND: [cfpageContentMultiTypeNestedFilter]
  OR: [cfpageContentMultiTypeNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

input cftopSectionMultiTypeNestedFilter {
  AND: [cftopSectionMultiTypeNestedFilter]
  OR: [cftopSectionMultiTypeNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}