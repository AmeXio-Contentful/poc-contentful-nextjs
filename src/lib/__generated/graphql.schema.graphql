"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  contentBlokCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentBlokCollection
  contentBlokMetCtaCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentBlokMetCtaCollection
  contentBlokSplitCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentBlokSplitCollection
  contentCarouselCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentCarouselCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  heroBannerCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HeroBannerCollection
  imageCarouselCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ImageCarouselCollection
  imageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ImageCollection
  languageMetadataCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): LanguageMetadataCollection
  menuGroupCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): MenuGroupCollection
  seoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): SeoCollection
  teaserCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TeaserCollection
  testimonialCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): TestimonialCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/button)
"""
type Button implements Entry {
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ButtonLinkingCollections
  sys: Sys!
  url(locale: String): String
}

type ButtonCollection {
  items: [Button]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ButtonFilter {
  AND: [ButtonFilter]
  OR: [ButtonFilter]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
}

type ButtonLinkingCollections {
  componentWrapperCollection(limit: Int = 100, locale: String, order: [ButtonLinkingCollectionsComponentWrapperCollectionOrder], preview: Boolean, skip: Int = 0): ComponentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ButtonLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [ButtonLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
  twoGridCollection(limit: Int = 100, locale: String, order: [ButtonLinkingCollectionsTwoGridCollectionOrder], preview: Boolean, skip: Int = 0): TwoGridCollection
}

enum ButtonLinkingCollectionsComponentWrapperCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ButtonLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ButtonLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ButtonLinkingCollectionsTwoGridCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ButtonOrder {
  buttonText_ASC
  buttonText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/componentWrapper)
"""
type ComponentWrapper implements Entry {
  componentsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: ComponentWrapperComponentsFilter): ComponentWrapperComponentsCollection
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentWrapperLinkingCollections
  sys: Sys!
}

type ComponentWrapperCollection {
  items: [ComponentWrapper]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ComponentWrapperComponentsCollection {
  items: [ComponentWrapperComponentsItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentWrapperComponentsFilter {
  AND: [ComponentWrapperComponentsFilter]
  OR: [ComponentWrapperComponentsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

union ComponentWrapperComponentsItem = Button | Description | Image | ImageCarousel | Teaser | Testimonial | Title | TwoGrid

input ComponentWrapperFilter {
  AND: [ComponentWrapperFilter]
  OR: [ComponentWrapperFilter]
  components: cfcomponentsMultiTypeNestedFilter
  componentsCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

type ComponentWrapperLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [ComponentWrapperLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
}

enum ComponentWrapperLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentWrapperOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentBlock)
"""
type ContentBlock implements Entry {
  contentBlockCtaCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ContentBlockContentBlockCtaCollection
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ContentBlockLinkingCollections
  sys: Sys!
  testField(locale: String): String
}

type ContentBlockCollection {
  items: [ContentBlock]!
  limit: Int!
  skip: Int!
  total: Int!
}

type ContentBlockContentBlockCtaCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentBlockFilter {
  AND: [ContentBlockFilter]
  OR: [ContentBlockFilter]
  contentBlockCtaCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  testField: String
  testField_contains: String
  testField_exists: Boolean
  testField_in: [String]
  testField_not: String
  testField_not_contains: String
  testField_not_in: [String]
}

type ContentBlockLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentBlockLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentBlockLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ContentBlockOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  testField_ASC
  testField_DESC
}

"""
Join us! [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentBlok)
"""
type ContentBlok implements Entry {
  block1Body(locale: String): ContentBlokBlock1Body
  block1Image(locale: String, preview: Boolean): Asset
  block2Body(locale: String): ContentBlokBlock2Body
  block2Image(locale: String, preview: Boolean): Asset
  block3Body(locale: String): ContentBlokBlock3Body
  block3Image(locale: String, preview: Boolean): Asset
  buttonLink(locale: String): String
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ContentBlokLinkingCollections
  subtitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type ContentBlokBlock1Body {
  json: JSON!
  links: ContentBlokBlock1BodyLinks!
}

type ContentBlokBlock1BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokBlock1BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokBlock1BodyLinks {
  assets: ContentBlokBlock1BodyAssets!
  entries: ContentBlokBlock1BodyEntries!
  resources: ContentBlokBlock1BodyResources!
}

type ContentBlokBlock1BodyResources {
  block: [ContentBlokBlock1BodyResourcesBlock!]!
  hyperlink: [ContentBlokBlock1BodyResourcesHyperlink!]!
  inline: [ContentBlokBlock1BodyResourcesInline!]!
}

type ContentBlokBlock1BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock1BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock1BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock2Body {
  json: JSON!
  links: ContentBlokBlock2BodyLinks!
}

type ContentBlokBlock2BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokBlock2BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokBlock2BodyLinks {
  assets: ContentBlokBlock2BodyAssets!
  entries: ContentBlokBlock2BodyEntries!
  resources: ContentBlokBlock2BodyResources!
}

type ContentBlokBlock2BodyResources {
  block: [ContentBlokBlock2BodyResourcesBlock!]!
  hyperlink: [ContentBlokBlock2BodyResourcesHyperlink!]!
  inline: [ContentBlokBlock2BodyResourcesInline!]!
}

type ContentBlokBlock2BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock2BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock2BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock3Body {
  json: JSON!
  links: ContentBlokBlock3BodyLinks!
}

type ContentBlokBlock3BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokBlock3BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokBlock3BodyLinks {
  assets: ContentBlokBlock3BodyAssets!
  entries: ContentBlokBlock3BodyEntries!
  resources: ContentBlokBlock3BodyResources!
}

type ContentBlokBlock3BodyResources {
  block: [ContentBlokBlock3BodyResourcesBlock!]!
  hyperlink: [ContentBlokBlock3BodyResourcesHyperlink!]!
  inline: [ContentBlokBlock3BodyResourcesInline!]!
}

type ContentBlokBlock3BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock3BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokBlock3BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokCollection {
  items: [ContentBlok]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentBlokFilter {
  AND: [ContentBlokFilter]
  OR: [ContentBlokFilter]
  block1Body_contains: String
  block1Body_exists: Boolean
  block1Body_not_contains: String
  block1Image_exists: Boolean
  block2Body_contains: String
  block2Body_exists: Boolean
  block2Body_not_contains: String
  block2Image_exists: Boolean
  block3Body_contains: String
  block3Body_exists: Boolean
  block3Body_not_contains: String
  block3Image_exists: Boolean
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ContentBlokLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentBlokLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentBlokLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Enterprise Content Management [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentBlokMetCta)
"""
type ContentBlokMetCta implements Entry {
  blockBody(locale: String): ContentBlokMetCtaBlockBody
  blockImage(locale: String, preview: Boolean): Asset
  blockTitle(locale: String): String
  buttonLink(locale: String): String
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ContentBlokMetCtaLinkingCollections
  sys: Sys!
}

type ContentBlokMetCtaBlockBody {
  json: JSON!
  links: ContentBlokMetCtaBlockBodyLinks!
}

type ContentBlokMetCtaBlockBodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokMetCtaBlockBodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokMetCtaBlockBodyLinks {
  assets: ContentBlokMetCtaBlockBodyAssets!
  entries: ContentBlokMetCtaBlockBodyEntries!
  resources: ContentBlokMetCtaBlockBodyResources!
}

type ContentBlokMetCtaBlockBodyResources {
  block: [ContentBlokMetCtaBlockBodyResourcesBlock!]!
  hyperlink: [ContentBlokMetCtaBlockBodyResourcesHyperlink!]!
  inline: [ContentBlokMetCtaBlockBodyResourcesInline!]!
}

type ContentBlokMetCtaBlockBodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokMetCtaBlockBodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokMetCtaBlockBodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokMetCtaCollection {
  items: [ContentBlokMetCta]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentBlokMetCtaFilter {
  AND: [ContentBlokMetCtaFilter]
  OR: [ContentBlokMetCtaFilter]
  blockBody_contains: String
  blockBody_exists: Boolean
  blockBody_not_contains: String
  blockImage_exists: Boolean
  blockTitle: String
  blockTitle_contains: String
  blockTitle_exists: Boolean
  blockTitle_in: [String]
  blockTitle_not: String
  blockTitle_not_contains: String
  blockTitle_not_in: [String]
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

type ContentBlokMetCtaLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentBlokMetCtaLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentBlokMetCtaLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ContentBlokMetCtaOrder {
  blockTitle_ASC
  blockTitle_DESC
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ContentBlokOrder {
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Expert advice [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentBlokSplit)
"""
type ContentBlokSplit implements Entry {
  backgroundColor(locale: String): String
  backgroundImage(locale: String, preview: Boolean): Asset
  button1(locale: String): ContentBlokSplitButton1
  buttonLink(locale: String): String
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  fullWidth(locale: String): Boolean
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): ContentBlokSplitLinkingCollections
  subtitle(locale: String): String
  sys: Sys!
  text(locale: String): ContentBlokSplitText
  title(locale: String): String
  title2(locale: String): String
}

type ContentBlokSplitButton1 {
  json: JSON!
  links: ContentBlokSplitButton1Links!
}

type ContentBlokSplitButton1Assets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokSplitButton1Entries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokSplitButton1Links {
  assets: ContentBlokSplitButton1Assets!
  entries: ContentBlokSplitButton1Entries!
  resources: ContentBlokSplitButton1Resources!
}

type ContentBlokSplitButton1Resources {
  block: [ContentBlokSplitButton1ResourcesBlock!]!
  hyperlink: [ContentBlokSplitButton1ResourcesHyperlink!]!
  inline: [ContentBlokSplitButton1ResourcesInline!]!
}

type ContentBlokSplitButton1ResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitButton1ResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitButton1ResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitCollection {
  items: [ContentBlokSplit]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentBlokSplitFilter {
  AND: [ContentBlokSplitFilter]
  OR: [ContentBlokSplitFilter]
  backgroundColor: String
  backgroundColor_contains: String
  backgroundColor_exists: Boolean
  backgroundColor_in: [String]
  backgroundColor_not: String
  backgroundColor_not_contains: String
  backgroundColor_not_in: [String]
  backgroundImage_exists: Boolean
  button1_contains: String
  button1_exists: Boolean
  button1_not_contains: String
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fullWidth: Boolean
  fullWidth_exists: Boolean
  fullWidth_not: Boolean
  image_exists: Boolean
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  text_contains: String
  text_exists: Boolean
  text_not_contains: String
  title: String
  title2: String
  title2_contains: String
  title2_exists: Boolean
  title2_in: [String]
  title2_not: String
  title2_not_contains: String
  title2_not_in: [String]
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ContentBlokSplitLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentBlokSplitLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentBlokSplitLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ContentBlokSplitOrder {
  backgroundColor_ASC
  backgroundColor_DESC
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  fullWidth_ASC
  fullWidth_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title2_ASC
  title2_DESC
  title_ASC
  title_DESC
}

type ContentBlokSplitText {
  json: JSON!
  links: ContentBlokSplitTextLinks!
}

type ContentBlokSplitTextAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentBlokSplitTextEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentBlokSplitTextLinks {
  assets: ContentBlokSplitTextAssets!
  entries: ContentBlokSplitTextEntries!
  resources: ContentBlokSplitTextResources!
}

type ContentBlokSplitTextResources {
  block: [ContentBlokSplitTextResourcesBlock!]!
  hyperlink: [ContentBlokSplitTextResourcesHyperlink!]!
  inline: [ContentBlokSplitTextResourcesInline!]!
}

type ContentBlokSplitTextResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitTextResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentBlokSplitTextResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

"""
Why AmeXio [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/contentCarousel)
"""
type ContentCarousel implements Entry {
  autoplay(locale: String): Boolean
  backgroundColor(locale: String): String
  block2Body(locale: String): ContentCarouselBlock2Body
  block2Image(locale: String, preview: Boolean): Asset
  block2JobTitle(locale: String): String
  block2Name(locale: String): String
  block3Body(locale: String): ContentCarouselBlock3Body
  block3Image(locale: String, preview: Boolean): Asset
  block3JobTitle(locale: String): String
  block3Name(locale: String): String
  blockBody(locale: String): ContentCarouselBlockBody
  blockImage(locale: String, preview: Boolean): Asset
  blockJobTitle(locale: String): String
  blockName(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ContentCarouselLinkingCollections
  subtitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type ContentCarouselBlock2Body {
  json: JSON!
  links: ContentCarouselBlock2BodyLinks!
}

type ContentCarouselBlock2BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentCarouselBlock2BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentCarouselBlock2BodyLinks {
  assets: ContentCarouselBlock2BodyAssets!
  entries: ContentCarouselBlock2BodyEntries!
  resources: ContentCarouselBlock2BodyResources!
}

type ContentCarouselBlock2BodyResources {
  block: [ContentCarouselBlock2BodyResourcesBlock!]!
  hyperlink: [ContentCarouselBlock2BodyResourcesHyperlink!]!
  inline: [ContentCarouselBlock2BodyResourcesInline!]!
}

type ContentCarouselBlock2BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock2BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock2BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock3Body {
  json: JSON!
  links: ContentCarouselBlock3BodyLinks!
}

type ContentCarouselBlock3BodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentCarouselBlock3BodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentCarouselBlock3BodyLinks {
  assets: ContentCarouselBlock3BodyAssets!
  entries: ContentCarouselBlock3BodyEntries!
  resources: ContentCarouselBlock3BodyResources!
}

type ContentCarouselBlock3BodyResources {
  block: [ContentCarouselBlock3BodyResourcesBlock!]!
  hyperlink: [ContentCarouselBlock3BodyResourcesHyperlink!]!
  inline: [ContentCarouselBlock3BodyResourcesInline!]!
}

type ContentCarouselBlock3BodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock3BodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlock3BodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlockBody {
  json: JSON!
  links: ContentCarouselBlockBodyLinks!
}

type ContentCarouselBlockBodyAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ContentCarouselBlockBodyEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ContentCarouselBlockBodyLinks {
  assets: ContentCarouselBlockBodyAssets!
  entries: ContentCarouselBlockBodyEntries!
  resources: ContentCarouselBlockBodyResources!
}

type ContentCarouselBlockBodyResources {
  block: [ContentCarouselBlockBodyResourcesBlock!]!
  hyperlink: [ContentCarouselBlockBodyResourcesHyperlink!]!
  inline: [ContentCarouselBlockBodyResourcesInline!]!
}

type ContentCarouselBlockBodyResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlockBodyResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselBlockBodyResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentCarouselCollection {
  items: [ContentCarousel]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContentCarouselFilter {
  AND: [ContentCarouselFilter]
  OR: [ContentCarouselFilter]
  autoplay: Boolean
  autoplay_exists: Boolean
  autoplay_not: Boolean
  backgroundColor: String
  backgroundColor_contains: String
  backgroundColor_exists: Boolean
  backgroundColor_in: [String]
  backgroundColor_not: String
  backgroundColor_not_contains: String
  backgroundColor_not_in: [String]
  block2Body_contains: String
  block2Body_exists: Boolean
  block2Body_not_contains: String
  block2Image_exists: Boolean
  block2JobTitle: String
  block2JobTitle_contains: String
  block2JobTitle_exists: Boolean
  block2JobTitle_in: [String]
  block2JobTitle_not: String
  block2JobTitle_not_contains: String
  block2JobTitle_not_in: [String]
  block2Name: String
  block2Name_contains: String
  block2Name_exists: Boolean
  block2Name_in: [String]
  block2Name_not: String
  block2Name_not_contains: String
  block2Name_not_in: [String]
  block3Body_contains: String
  block3Body_exists: Boolean
  block3Body_not_contains: String
  block3Image_exists: Boolean
  block3JobTitle: String
  block3JobTitle_contains: String
  block3JobTitle_exists: Boolean
  block3JobTitle_in: [String]
  block3JobTitle_not: String
  block3JobTitle_not_contains: String
  block3JobTitle_not_in: [String]
  block3Name: String
  block3Name_contains: String
  block3Name_exists: Boolean
  block3Name_in: [String]
  block3Name_not: String
  block3Name_not_contains: String
  block3Name_not_in: [String]
  blockBody_contains: String
  blockBody_exists: Boolean
  blockBody_not_contains: String
  blockImage_exists: Boolean
  blockJobTitle: String
  blockJobTitle_contains: String
  blockJobTitle_exists: Boolean
  blockJobTitle_in: [String]
  blockJobTitle_not: String
  blockJobTitle_not_contains: String
  blockJobTitle_not_in: [String]
  blockName: String
  blockName_contains: String
  blockName_exists: Boolean
  blockName_in: [String]
  blockName_not: String
  blockName_not_contains: String
  blockName_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ContentCarouselLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ContentCarouselLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum ContentCarouselLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ContentCarouselOrder {
  autoplay_ASC
  autoplay_DESC
  backgroundColor_ASC
  backgroundColor_DESC
  block2JobTitle_ASC
  block2JobTitle_DESC
  block2Name_ASC
  block2Name_DESC
  block3JobTitle_ASC
  block3JobTitle_DESC
  block3Name_ASC
  block3Name_DESC
  blockJobTitle_ASC
  blockJobTitle_DESC
  blockName_ASC
  blockName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/description)
"""
type Description implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  linkedFrom(allowedLocales: [String]): DescriptionLinkingCollections
  sys: Sys!
}

type DescriptionCollection {
  items: [Description]!
  limit: Int!
  skip: Int!
  total: Int!
}

input DescriptionFilter {
  AND: [DescriptionFilter]
  OR: [DescriptionFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  sys: SysFilter
}

type DescriptionLinkingCollections {
  componentWrapperCollection(limit: Int = 100, locale: String, order: [DescriptionLinkingCollectionsComponentWrapperCollectionOrder], preview: Boolean, skip: Int = 0): ComponentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [DescriptionLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [DescriptionLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
  twoGridCollection(limit: Int = 100, locale: String, order: [DescriptionLinkingCollectionsTwoGridCollectionOrder], preview: Boolean, skip: Int = 0): TwoGridCollection
}

enum DescriptionLinkingCollectionsComponentWrapperCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum DescriptionLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum DescriptionLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum DescriptionLinkingCollectionsTwoGridCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum DescriptionOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Navigation content type used for powering the Footer menu [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/footerMenu)
"""
type FooterMenu implements Entry {
  contentfulMetadata: ContentfulMetadata!
  facebookLink(locale: String): String
  instagramLink(locale: String): String
  internalName(locale: String): String
  legalLinks(locale: String, preview: Boolean, where: MenuGroupFilter): MenuGroup
  linkedFrom(allowedLocales: [String]): FooterMenuLinkingCollections
  linkedinLink(locale: String): String
  menuItemsCollection(limit: Int = 100, locale: String, order: [FooterMenuMenuItemsCollectionOrder], preview: Boolean, skip: Int = 0, where: MenuGroupFilter): FooterMenuMenuItemsCollection
  sys: Sys!
  twitterLink(locale: String): String
  youtube(locale: String): String
}

type FooterMenuCollection {
  items: [FooterMenu]!
  limit: Int!
  skip: Int!
  total: Int!
}

input FooterMenuFilter {
  AND: [FooterMenuFilter]
  OR: [FooterMenuFilter]
  contentfulMetadata: ContentfulMetadataFilter
  facebookLink: String
  facebookLink_contains: String
  facebookLink_exists: Boolean
  facebookLink_in: [String]
  facebookLink_not: String
  facebookLink_not_contains: String
  facebookLink_not_in: [String]
  instagramLink: String
  instagramLink_contains: String
  instagramLink_exists: Boolean
  instagramLink_in: [String]
  instagramLink_not: String
  instagramLink_not_contains: String
  instagramLink_not_in: [String]
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  legalLinks: cfMenuGroupNestedFilter
  legalLinks_exists: Boolean
  linkedinLink: String
  linkedinLink_contains: String
  linkedinLink_exists: Boolean
  linkedinLink_in: [String]
  linkedinLink_not: String
  linkedinLink_not_contains: String
  linkedinLink_not_in: [String]
  menuItems: cfMenuGroupNestedFilter
  menuItemsCollection_exists: Boolean
  sys: SysFilter
  twitterLink: String
  twitterLink_contains: String
  twitterLink_exists: Boolean
  twitterLink_in: [String]
  twitterLink_not: String
  twitterLink_not_contains: String
  twitterLink_not_in: [String]
  youtube: String
  youtube_contains: String
  youtube_exists: Boolean
  youtube_in: [String]
  youtube_not: String
  youtube_not_contains: String
  youtube_not_in: [String]
}

type FooterMenuLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type FooterMenuMenuItemsCollection {
  items: [MenuGroup]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum FooterMenuMenuItemsCollectionOrder {
  groupName_ASC
  groupName_DESC
  internalTitle_ASC
  internalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum FooterMenuOrder {
  facebookLink_ASC
  facebookLink_DESC
  instagramLink_ASC
  instagramLink_DESC
  internalName_ASC
  internalName_DESC
  linkedinLink_ASC
  linkedinLink_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  twitterLink_ASC
  twitterLink_DESC
  youtube_ASC
  youtube_DESC
}

"""
Your Partner in Digital Transformation [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/heroBanner)
"""
type HeroBanner implements Entry {
  backgroundImage(locale: String, preview: Boolean): Asset
  buttonLink(locale: String): String
  buttonText(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  fullWidth(locale: String): Boolean
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): HeroBannerLinkingCollections
  subtitle(locale: String): HeroBannerSubtitle
  sys: Sys!
  test(locale: String): Int
  testmeer(locale: String, preview: Boolean): Entry
  title(locale: String): String
}

type HeroBannerCollection {
  items: [HeroBanner]!
  limit: Int!
  skip: Int!
  total: Int!
}

input HeroBannerFilter {
  AND: [HeroBannerFilter]
  OR: [HeroBannerFilter]
  backgroundImage_exists: Boolean
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fullWidth: Boolean
  fullWidth_exists: Boolean
  fullWidth_not: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_not_contains: String
  sys: SysFilter
  test: Int
  test_exists: Boolean
  test_gt: Int
  test_gte: Int
  test_in: [Int]
  test_lt: Int
  test_lte: Int
  test_not: Int
  test_not_in: [Int]
  testmeer_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type HeroBannerLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [HeroBannerLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum HeroBannerLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum HeroBannerOrder {
  buttonLink_ASC
  buttonLink_DESC
  buttonText_ASC
  buttonText_DESC
  fullWidth_ASC
  fullWidth_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  test_ASC
  test_DESC
  title_ASC
  title_DESC
}

type HeroBannerSubtitle {
  json: JSON!
  links: HeroBannerSubtitleLinks!
}

type HeroBannerSubtitleAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type HeroBannerSubtitleEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type HeroBannerSubtitleLinks {
  assets: HeroBannerSubtitleAssets!
  entries: HeroBannerSubtitleEntries!
  resources: HeroBannerSubtitleResources!
}

type HeroBannerSubtitleResources {
  block: [HeroBannerSubtitleResourcesBlock!]!
  hyperlink: [HeroBannerSubtitleResourcesHyperlink!]!
  inline: [HeroBannerSubtitleResourcesInline!]!
}

type HeroBannerSubtitleResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type HeroBannerSubtitleResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type HeroBannerSubtitleResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/image)
"""
type Image implements Entry {
  contentfulMetadata: ContentfulMetadata!
  image(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ImageLinkingCollections
  sys: Sys!
}

"""
Logo carousel [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/imageCarousel)
"""
type ImageCarousel implements Entry {
  autoplay(locale: String): Boolean
  contentfulMetadata: ContentfulMetadata!
  imageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ImageCarouselLinkingCollections
  sys: Sys!
}

type ImageCarouselCollection {
  items: [ImageCarousel]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ImageCarouselFilter {
  AND: [ImageCarouselFilter]
  OR: [ImageCarouselFilter]
  autoplay: Boolean
  autoplay_exists: Boolean
  autoplay_not: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  imageCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

type ImageCarouselLinkingCollections {
  componentWrapperCollection(limit: Int = 100, locale: String, order: [ImageCarouselLinkingCollectionsComponentWrapperCollectionOrder], preview: Boolean, skip: Int = 0): ComponentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [ImageCarouselLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [ImageCarouselLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
  twoGridCollection(limit: Int = 100, locale: String, order: [ImageCarouselLinkingCollectionsTwoGridCollectionOrder], preview: Boolean, skip: Int = 0): TwoGridCollection
}

enum ImageCarouselLinkingCollectionsComponentWrapperCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageCarouselLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ImageCarouselLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageCarouselLinkingCollectionsTwoGridCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageCarouselOrder {
  autoplay_ASC
  autoplay_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ImageCollection {
  items: [Image]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ImageFilter {
  AND: [ImageFilter]
  OR: [ImageFilter]
  contentfulMetadata: ContentfulMetadataFilter
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

type ImageLinkingCollections {
  componentWrapperCollection(limit: Int = 100, locale: String, order: [ImageLinkingCollectionsComponentWrapperCollectionOrder], preview: Boolean, skip: Int = 0): ComponentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [ImageLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
  twoGridCollection(limit: Int = 100, locale: String, order: [ImageLinkingCollectionsTwoGridCollectionOrder], preview: Boolean, skip: Int = 0): TwoGridCollection
}

enum ImageLinkingCollectionsComponentWrapperCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageLinkingCollectionsTwoGridCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/languageMetadata)
"""
type LanguageMetadata implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): LanguageMetadataLinkingCollections
  locale(locale: String): String
  localeImage(locale: String, preview: Boolean): Asset
  localeUrl(locale: String): String
  sys: Sys!
}

type LanguageMetadataCollection {
  items: [LanguageMetadata]!
  limit: Int!
  skip: Int!
  total: Int!
}

input LanguageMetadataFilter {
  AND: [LanguageMetadataFilter]
  OR: [LanguageMetadataFilter]
  contentfulMetadata: ContentfulMetadataFilter
  locale: String
  localeImage_exists: Boolean
  localeUrl: String
  localeUrl_contains: String
  localeUrl_exists: Boolean
  localeUrl_in: [String]
  localeUrl_not: String
  localeUrl_not_contains: String
  localeUrl_not_in: [String]
  locale_contains: String
  locale_exists: Boolean
  locale_in: [String]
  locale_not: String
  locale_not_contains: String
  locale_not_in: [String]
  sys: SysFilter
}

type LanguageMetadataLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  navigationMenuCollection(limit: Int = 100, locale: String, order: [LanguageMetadataLinkingCollectionsNavigationMenuCollectionOrder], preview: Boolean, skip: Int = 0): NavigationMenuCollection
}

enum LanguageMetadataLinkingCollectionsNavigationMenuCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum LanguageMetadataOrder {
  localeUrl_ASC
  localeUrl_DESC
  locale_ASC
  locale_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/mainNavigation)
"""
type MainNavigation implements Entry {
  contentfulMetadata: ContentfulMetadata!
  itemsCollection(limit: Int = 100, locale: String, order: [MainNavigationItemsCollectionOrder], preview: Boolean, skip: Int = 0, where: NavigationItemFilter): MainNavigationItemsCollection
  linkedFrom(allowedLocales: [String]): MainNavigationLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type MainNavigationCollection {
  items: [MainNavigation]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MainNavigationFilter {
  AND: [MainNavigationFilter]
  OR: [MainNavigationFilter]
  contentfulMetadata: ContentfulMetadataFilter
  items: cfNavigationItemNestedFilter
  itemsCollection_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type MainNavigationItemsCollection {
  items: [NavigationItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum MainNavigationItemsCollectionOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type MainNavigationLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum MainNavigationOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
A group of items making up a section in the navigation menu [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/menuGroup)
"""
type MenuGroup implements Entry {
  contentfulMetadata: ContentfulMetadata!
  featuredPagesCollection(limit: Int = 100, locale: String, order: [MenuGroupFeaturedPagesCollectionOrder], preview: Boolean, skip: Int = 0, where: PageFilter): MenuGroupFeaturedPagesCollection
  footerImage(locale: String, preview: Boolean): Asset
  groupLink(locale: String, preview: Boolean, where: PageFilter): Page
  groupName(locale: String): String
  internalTitle(locale: String): String
  linkedFrom(allowedLocales: [String]): MenuGroupLinkingCollections
  sys: Sys!
}

type MenuGroupCollection {
  items: [MenuGroup]!
  limit: Int!
  skip: Int!
  total: Int!
}

type MenuGroupFeaturedPagesCollection {
  items: [Page]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum MenuGroupFeaturedPagesCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

input MenuGroupFilter {
  AND: [MenuGroupFilter]
  OR: [MenuGroupFilter]
  contentfulMetadata: ContentfulMetadataFilter
  featuredPages: cfPageNestedFilter
  featuredPagesCollection_exists: Boolean
  footerImage_exists: Boolean
  groupLink: cfPageNestedFilter
  groupLink_exists: Boolean
  groupName: String
  groupName_contains: String
  groupName_exists: Boolean
  groupName_in: [String]
  groupName_not: String
  groupName_not_contains: String
  groupName_not_in: [String]
  internalTitle: String
  internalTitle_contains: String
  internalTitle_exists: Boolean
  internalTitle_in: [String]
  internalTitle_not: String
  internalTitle_not_contains: String
  internalTitle_not_in: [String]
  sys: SysFilter
}

type MenuGroupLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  footerMenuCollection(limit: Int = 100, locale: String, order: [MenuGroupLinkingCollectionsFooterMenuCollectionOrder], preview: Boolean, skip: Int = 0): FooterMenuCollection
  navigationMenuCollection(limit: Int = 100, locale: String, order: [MenuGroupLinkingCollectionsNavigationMenuCollectionOrder], preview: Boolean, skip: Int = 0): NavigationMenuCollection
}

enum MenuGroupLinkingCollectionsFooterMenuCollectionOrder {
  facebookLink_ASC
  facebookLink_DESC
  instagramLink_ASC
  instagramLink_DESC
  internalName_ASC
  internalName_DESC
  linkedinLink_ASC
  linkedinLink_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  twitterLink_ASC
  twitterLink_DESC
  youtube_ASC
  youtube_DESC
}

enum MenuGroupLinkingCollectionsNavigationMenuCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum MenuGroupOrder {
  groupName_ASC
  groupName_DESC
  internalTitle_ASC
  internalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/navigationItem)
"""
type NavigationItem implements Entry {
  childrenCollection(limit: Int = 100, locale: String, order: [NavigationItemChildrenCollectionOrder], preview: Boolean, skip: Int = 0, where: NavigationItemFilter): NavigationItemChildrenCollection
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): NavigationItemLinkingCollections
  page(locale: String, preview: Boolean): Entry
  sys: Sys!
  title(locale: String): String
}

type NavigationItemChildrenCollection {
  items: [NavigationItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum NavigationItemChildrenCollectionOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type NavigationItemCollection {
  items: [NavigationItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavigationItemFilter {
  AND: [NavigationItemFilter]
  OR: [NavigationItemFilter]
  children: cfNavigationItemNestedFilter
  childrenCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  page_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type NavigationItemLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  mainNavigationCollection(limit: Int = 100, locale: String, order: [NavigationItemLinkingCollectionsMainNavigationCollectionOrder], preview: Boolean, skip: Int = 0): MainNavigationCollection
  navigationItemCollection(limit: Int = 100, locale: String, order: [NavigationItemLinkingCollectionsNavigationItemCollectionOrder], preview: Boolean, skip: Int = 0): NavigationItemCollection
}

enum NavigationItemLinkingCollectionsMainNavigationCollectionOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum NavigationItemLinkingCollectionsNavigationItemCollectionOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum NavigationItemOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Navigation menu in the header [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/navigationMenu)
"""
type NavigationMenu implements Entry {
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): NavigationMenuLinkingCollections
  menuItemsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: NavigationMenuMenuItemsFilter): NavigationMenuMenuItemsCollection
  sys: Sys!
}

type NavigationMenuCollection {
  items: [NavigationMenu]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavigationMenuFilter {
  AND: [NavigationMenuFilter]
  OR: [NavigationMenuFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  menuItems: cfmenuItemsMultiTypeNestedFilter
  menuItemsCollection_exists: Boolean
  sys: SysFilter
}

type NavigationMenuLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type NavigationMenuMenuItemsCollection {
  items: [NavigationMenuMenuItemsItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavigationMenuMenuItemsFilter {
  AND: [NavigationMenuMenuItemsFilter]
  OR: [NavigationMenuMenuItemsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

union NavigationMenuMenuItemsItem = LanguageMetadata | MenuGroup

enum NavigationMenuOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Container that enables editors to publish a page, define its slug, select & arrange its content [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/page)
"""
type Page implements Entry {
  contentfulMetadata: ContentfulMetadata!
  extraSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageExtraSectionCollection
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageLinkingCollections
  pageContentCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: PagePageContentFilter): PagePageContentCollection
  pageName(locale: String): String
  seo(locale: String, preview: Boolean, where: SeoFilter): Seo
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
  topSectionCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: PageTopSectionFilter): PageTopSectionCollection
}

type PageCollection {
  items: [Page]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageExtraSectionCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageFilter {
  AND: [PageFilter]
  OR: [PageFilter]
  contentfulMetadata: ContentfulMetadataFilter
  extraSectionCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  pageContent: cfpageContentMultiTypeNestedFilter
  pageContentCollection_exists: Boolean
  pageName: String
  pageName_contains: String
  pageName_exists: Boolean
  pageName_in: [String]
  pageName_not: String
  pageName_not_contains: String
  pageName_not_in: [String]
  seo: cfSeoNestedFilter
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  topSection: cftopSectionMultiTypeNestedFilter
  topSectionCollection_exists: Boolean
}

type PageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  menuGroupCollection(limit: Int = 100, locale: String, order: [PageLinkingCollectionsMenuGroupCollectionOrder], preview: Boolean, skip: Int = 0): MenuGroupCollection
}

enum PageLinkingCollectionsMenuGroupCollectionOrder {
  groupName_ASC
  groupName_DESC
  internalTitle_ASC
  internalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PagePageContentCollection {
  items: [PagePageContentItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PagePageContentFilter {
  AND: [PagePageContentFilter]
  OR: [PagePageContentFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

union PagePageContentItem = Button | ContentBlock | ContentBlok | ContentBlokMetCta | ContentBlokSplit | ContentCarousel | Description | HeroBanner | ImageCarousel | PageSection | Teaser | Testimonial | TextBanner | Title

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/pageSection)
"""
type PageSection implements Entry {
  componentsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: PageSectionComponentsFilter): PageSectionComponentsCollection
  componentsGrouped(locale: String): Boolean
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageSectionLinkingCollections
  sectionType(locale: String): String
  sys: Sys!
}

type PageSectionCollection {
  items: [PageSection]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageSectionComponentsCollection {
  items: [PageSectionComponentsItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageSectionComponentsFilter {
  AND: [PageSectionComponentsFilter]
  OR: [PageSectionComponentsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

union PageSectionComponentsItem = Button | ComponentWrapper | Description | Image | ImageCarousel | PageSection | Teaser | Testimonial | Title | TwoGrid

input PageSectionFilter {
  AND: [PageSectionFilter]
  OR: [PageSectionFilter]
  components: cfcomponentsMultiTypeNestedFilter
  componentsCollection_exists: Boolean
  componentsGrouped: Boolean
  componentsGrouped_exists: Boolean
  componentsGrouped_not: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sectionType: String
  sectionType_contains: String
  sectionType_exists: Boolean
  sectionType_in: [String]
  sectionType_not: String
  sectionType_not_contains: String
  sectionType_not_in: [String]
  sys: SysFilter
}

type PageSectionLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [PageSectionLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [PageSectionLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
  twoGridCollection(limit: Int = 100, locale: String, order: [PageSectionLinkingCollectionsTwoGridCollectionOrder], preview: Boolean, skip: Int = 0): TwoGridCollection
}

enum PageSectionLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum PageSectionLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageSectionLinkingCollectionsTwoGridCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum PageSectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type PageTopSectionCollection {
  items: [PageTopSectionItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageTopSectionFilter {
  AND: [PageTopSectionFilter]
  OR: [PageTopSectionFilter]
  backgroundImage_exists: Boolean
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fullWidth: Boolean
  fullWidth_exists: Boolean
  fullWidth_not: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_not_contains: String
  sys: SysFilter
  test: Int
  test_exists: Boolean
  test_gt: Int
  test_gte: Int
  test_in: [Int]
  test_lt: Int
  test_lte: Int
  test_not: Int
  test_not_in: [Int]
  testmeer_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

union PageTopSectionItem = HeroBanner

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  button(id: String!, locale: String, preview: Boolean): Button
  buttonCollection(limit: Int = 100, locale: String, order: [ButtonOrder], preview: Boolean, skip: Int = 0, where: ButtonFilter): ButtonCollection
  componentWrapper(id: String!, locale: String, preview: Boolean): ComponentWrapper
  componentWrapperCollection(limit: Int = 100, locale: String, order: [ComponentWrapperOrder], preview: Boolean, skip: Int = 0, where: ComponentWrapperFilter): ComponentWrapperCollection
  contentBlock(id: String!, locale: String, preview: Boolean): ContentBlock
  contentBlockCollection(limit: Int = 100, locale: String, order: [ContentBlockOrder], preview: Boolean, skip: Int = 0, where: ContentBlockFilter): ContentBlockCollection
  contentBlok(id: String!, locale: String, preview: Boolean): ContentBlok
  contentBlokCollection(limit: Int = 100, locale: String, order: [ContentBlokOrder], preview: Boolean, skip: Int = 0, where: ContentBlokFilter): ContentBlokCollection
  contentBlokMetCta(id: String!, locale: String, preview: Boolean): ContentBlokMetCta
  contentBlokMetCtaCollection(limit: Int = 100, locale: String, order: [ContentBlokMetCtaOrder], preview: Boolean, skip: Int = 0, where: ContentBlokMetCtaFilter): ContentBlokMetCtaCollection
  contentBlokSplit(id: String!, locale: String, preview: Boolean): ContentBlokSplit
  contentBlokSplitCollection(limit: Int = 100, locale: String, order: [ContentBlokSplitOrder], preview: Boolean, skip: Int = 0, where: ContentBlokSplitFilter): ContentBlokSplitCollection
  contentCarousel(id: String!, locale: String, preview: Boolean): ContentCarousel
  contentCarouselCollection(limit: Int = 100, locale: String, order: [ContentCarouselOrder], preview: Boolean, skip: Int = 0, where: ContentCarouselFilter): ContentCarouselCollection
  description(id: String!, locale: String, preview: Boolean): Description
  descriptionCollection(limit: Int = 100, locale: String, order: [DescriptionOrder], preview: Boolean, skip: Int = 0, where: DescriptionFilter): DescriptionCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  footerMenu(id: String!, locale: String, preview: Boolean): FooterMenu
  footerMenuCollection(limit: Int = 100, locale: String, order: [FooterMenuOrder], preview: Boolean, skip: Int = 0, where: FooterMenuFilter): FooterMenuCollection
  heroBanner(id: String!, locale: String, preview: Boolean): HeroBanner
  heroBannerCollection(limit: Int = 100, locale: String, order: [HeroBannerOrder], preview: Boolean, skip: Int = 0, where: HeroBannerFilter): HeroBannerCollection
  image(id: String!, locale: String, preview: Boolean): Image
  imageCarousel(id: String!, locale: String, preview: Boolean): ImageCarousel
  imageCarouselCollection(limit: Int = 100, locale: String, order: [ImageCarouselOrder], preview: Boolean, skip: Int = 0, where: ImageCarouselFilter): ImageCarouselCollection
  imageCollection(limit: Int = 100, locale: String, order: [ImageOrder], preview: Boolean, skip: Int = 0, where: ImageFilter): ImageCollection
  languageMetadata(id: String!, locale: String, preview: Boolean): LanguageMetadata
  languageMetadataCollection(limit: Int = 100, locale: String, order: [LanguageMetadataOrder], preview: Boolean, skip: Int = 0, where: LanguageMetadataFilter): LanguageMetadataCollection
  mainNavigation(id: String!, locale: String, preview: Boolean): MainNavigation
  mainNavigationCollection(limit: Int = 100, locale: String, order: [MainNavigationOrder], preview: Boolean, skip: Int = 0, where: MainNavigationFilter): MainNavigationCollection
  menuGroup(id: String!, locale: String, preview: Boolean): MenuGroup
  menuGroupCollection(limit: Int = 100, locale: String, order: [MenuGroupOrder], preview: Boolean, skip: Int = 0, where: MenuGroupFilter): MenuGroupCollection
  navigationItem(id: String!, locale: String, preview: Boolean): NavigationItem
  navigationItemCollection(limit: Int = 100, locale: String, order: [NavigationItemOrder], preview: Boolean, skip: Int = 0, where: NavigationItemFilter): NavigationItemCollection
  navigationMenu(id: String!, locale: String, preview: Boolean): NavigationMenu
  navigationMenuCollection(limit: Int = 100, locale: String, order: [NavigationMenuOrder], preview: Boolean, skip: Int = 0, where: NavigationMenuFilter): NavigationMenuCollection
  page(id: String!, locale: String, preview: Boolean): Page
  pageCollection(limit: Int = 100, locale: String, order: [PageOrder], preview: Boolean, skip: Int = 0, where: PageFilter): PageCollection
  pageSection(id: String!, locale: String, preview: Boolean): PageSection
  pageSectionCollection(limit: Int = 100, locale: String, order: [PageSectionOrder], preview: Boolean, skip: Int = 0, where: PageSectionFilter): PageSectionCollection
  seo(id: String!, locale: String, preview: Boolean): Seo
  seoCollection(limit: Int = 100, locale: String, order: [SeoOrder], preview: Boolean, skip: Int = 0, where: SeoFilter): SeoCollection
  teaser(id: String!, locale: String, preview: Boolean): Teaser
  teaserCollection(limit: Int = 100, locale: String, order: [TeaserOrder], preview: Boolean, skip: Int = 0, where: TeaserFilter): TeaserCollection
  testimonial(id: String!, locale: String, preview: Boolean): Testimonial
  testimonialCollection(limit: Int = 100, locale: String, order: [TestimonialOrder], preview: Boolean, skip: Int = 0, where: TestimonialFilter): TestimonialCollection
  textBanner(id: String!, locale: String, preview: Boolean): TextBanner
  textBannerCollection(limit: Int = 100, locale: String, order: [TextBannerOrder], preview: Boolean, skip: Int = 0, where: TextBannerFilter): TextBannerCollection
  title(id: String!, locale: String, preview: Boolean): Title
  titleCollection(limit: Int = 100, locale: String, order: [TitleOrder], preview: Boolean, skip: Int = 0, where: TitleFilter): TitleCollection
  twoGrid(id: String!, locale: String, preview: Boolean): TwoGrid
  twoGridCollection(limit: Int = 100, locale: String, order: [TwoGridOrder], preview: Boolean, skip: Int = 0, where: TwoGridFilter): TwoGridCollection
}

interface ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  urn: String!
}

"""
Open Graph (OG) meta tags for optimizing SEO visibility [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/seo)
"""
type Seo implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): SeoLinkingCollections
  name(locale: String): String
  noFollow(locale: String): Boolean
  noIndex(locale: String): Boolean
  sys: Sys!
  title(locale: String): String
}

type SeoCollection {
  items: [Seo]!
  limit: Int!
  skip: Int!
  total: Int!
}

input SeoFilter {
  AND: [SeoFilter]
  OR: [SeoFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  image_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  noFollow: Boolean
  noFollow_exists: Boolean
  noFollow_not: Boolean
  noIndex: Boolean
  noIndex_exists: Boolean
  noIndex_not: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type SeoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [SeoLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum SeoLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum SeoOrder {
  description_ASC
  description_DESC
  name_ASC
  name_DESC
  noFollow_ASC
  noFollow_DESC
  noIndex_ASC
  noIndex_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/teaser)
"""
type Teaser implements Entry {
  buttonText(locale: String): String
  buttonUrl(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  grouped(locale: String): Boolean
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): TeaserLinkingCollections
  subtitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type TeaserCollection {
  items: [Teaser]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TeaserFilter {
  AND: [TeaserFilter]
  OR: [TeaserFilter]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  buttonUrl: String
  buttonUrl_contains: String
  buttonUrl_exists: Boolean
  buttonUrl_in: [String]
  buttonUrl_not: String
  buttonUrl_not_contains: String
  buttonUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  grouped: Boolean
  grouped_exists: Boolean
  grouped_not: Boolean
  image_exists: Boolean
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type TeaserLinkingCollections {
  componentWrapperCollection(limit: Int = 100, locale: String, order: [TeaserLinkingCollectionsComponentWrapperCollectionOrder], preview: Boolean, skip: Int = 0): ComponentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [TeaserLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [TeaserLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
  twoGridCollection(limit: Int = 100, locale: String, order: [TeaserLinkingCollectionsTwoGridCollectionOrder], preview: Boolean, skip: Int = 0): TwoGridCollection
}

enum TeaserLinkingCollectionsComponentWrapperCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TeaserLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum TeaserLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TeaserLinkingCollectionsTwoGridCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TeaserOrder {
  buttonText_ASC
  buttonText_DESC
  buttonUrl_ASC
  buttonUrl_DESC
  grouped_ASC
  grouped_DESC
  subtitle_ASC
  subtitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/testimonial)
"""
type Testimonial implements Entry {
  contentfulMetadata: ContentfulMetadata!
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): TestimonialLinkingCollections
  quote(locale: String): String
  subtitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type TestimonialCollection {
  items: [Testimonial]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TestimonialFilter {
  AND: [TestimonialFilter]
  OR: [TestimonialFilter]
  contentfulMetadata: ContentfulMetadataFilter
  image_exists: Boolean
  quote: String
  quote_contains: String
  quote_exists: Boolean
  quote_in: [String]
  quote_not: String
  quote_not_contains: String
  quote_not_in: [String]
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type TestimonialLinkingCollections {
  componentWrapperCollection(limit: Int = 100, locale: String, order: [TestimonialLinkingCollectionsComponentWrapperCollectionOrder], preview: Boolean, skip: Int = 0): ComponentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [TestimonialLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [TestimonialLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
  twoGridCollection(limit: Int = 100, locale: String, order: [TestimonialLinkingCollectionsTwoGridCollectionOrder], preview: Boolean, skip: Int = 0): TwoGridCollection
}

enum TestimonialLinkingCollectionsComponentWrapperCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TestimonialLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum TestimonialLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TestimonialLinkingCollectionsTwoGridCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TestimonialOrder {
  quote_ASC
  quote_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
A full width banner with title and description. [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/textBanner)
"""
type TextBanner implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  linkedFrom(allowedLocales: [String]): TextBannerLinkingCollections
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type TextBannerCollection {
  items: [TextBanner]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TextBannerFilter {
  AND: [TextBannerFilter]
  OR: [TextBannerFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type TextBannerLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [TextBannerLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum TextBannerLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum TextBannerOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
How we help businesses with their digital growth [See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/title)
"""
type Title implements Entry {
  alignment(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  fontSize(locale: String): String
  linkedFrom(allowedLocales: [String]): TitleLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type TitleCollection {
  items: [Title]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TitleFilter {
  AND: [TitleFilter]
  OR: [TitleFilter]
  alignment: String
  alignment_contains: String
  alignment_exists: Boolean
  alignment_in: [String]
  alignment_not: String
  alignment_not_contains: String
  alignment_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fontSize: String
  fontSize_contains: String
  fontSize_exists: Boolean
  fontSize_in: [String]
  fontSize_not: String
  fontSize_not_contains: String
  fontSize_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type TitleLinkingCollections {
  componentWrapperCollection(limit: Int = 100, locale: String, order: [TitleLinkingCollectionsComponentWrapperCollectionOrder], preview: Boolean, skip: Int = 0): ComponentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [TitleLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [TitleLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
  twoGridCollection(limit: Int = 100, locale: String, order: [TitleLinkingCollectionsTwoGridCollectionOrder], preview: Boolean, skip: Int = 0): TwoGridCollection
}

enum TitleLinkingCollectionsComponentWrapperCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TitleLinkingCollectionsPageCollectionOrder {
  internalName_ASC
  internalName_DESC
  pageName_ASC
  pageName_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum TitleLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TitleLinkingCollectionsTwoGridCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TitleOrder {
  alignment_ASC
  alignment_DESC
  fontSize_ASC
  fontSize_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/2p89d5j9ulp9/content_types/twoGrid)
"""
type TwoGrid implements Entry {
  componentLeft(locale: String, preview: Boolean): TwoGridComponentLeft
  componentRight(locale: String, preview: Boolean): TwoGridComponentRight
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): TwoGridLinkingCollections
  sys: Sys!
}

type TwoGridCollection {
  items: [TwoGrid]!
  limit: Int!
  skip: Int!
  total: Int!
}

union TwoGridComponentLeft = Button | Description | Image | ImageCarousel | PageSection | Teaser | Testimonial | Title | TwoGrid

union TwoGridComponentRight = Button | Description | Image | ImageCarousel | PageSection | Teaser | Testimonial | Title | TwoGrid

input TwoGridFilter {
  AND: [TwoGridFilter]
  OR: [TwoGridFilter]
  componentLeft_exists: Boolean
  componentRight_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

type TwoGridLinkingCollections {
  componentWrapperCollection(limit: Int = 100, locale: String, order: [TwoGridLinkingCollectionsComponentWrapperCollectionOrder], preview: Boolean, skip: Int = 0): ComponentWrapperCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageSectionCollection(limit: Int = 100, locale: String, order: [TwoGridLinkingCollectionsPageSectionCollectionOrder], preview: Boolean, skip: Int = 0): PageSectionCollection
  twoGridCollection(limit: Int = 100, locale: String, order: [TwoGridLinkingCollectionsTwoGridCollectionOrder], preview: Boolean, skip: Int = 0): TwoGridCollection
}

enum TwoGridLinkingCollectionsComponentWrapperCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TwoGridLinkingCollectionsPageSectionCollectionOrder {
  componentsGrouped_ASC
  componentsGrouped_DESC
  internalName_ASC
  internalName_DESC
  sectionType_ASC
  sectionType_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TwoGridLinkingCollectionsTwoGridCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum TwoGridOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

interface _Node {
  _id: ID!
}

input cfMenuGroupNestedFilter {
  AND: [cfMenuGroupNestedFilter]
  OR: [cfMenuGroupNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  featuredPagesCollection_exists: Boolean
  footerImage_exists: Boolean
  groupLink_exists: Boolean
  groupName: String
  groupName_contains: String
  groupName_exists: Boolean
  groupName_in: [String]
  groupName_not: String
  groupName_not_contains: String
  groupName_not_in: [String]
  internalTitle: String
  internalTitle_contains: String
  internalTitle_exists: Boolean
  internalTitle_in: [String]
  internalTitle_not: String
  internalTitle_not_contains: String
  internalTitle_not_in: [String]
  sys: SysFilter
}

input cfNavigationItemNestedFilter {
  AND: [cfNavigationItemNestedFilter]
  OR: [cfNavigationItemNestedFilter]
  childrenCollection_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  page_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfPageNestedFilter {
  AND: [cfPageNestedFilter]
  OR: [cfPageNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  extraSectionCollection_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  pageContentCollection_exists: Boolean
  pageName: String
  pageName_contains: String
  pageName_exists: Boolean
  pageName_in: [String]
  pageName_not: String
  pageName_not_contains: String
  pageName_not_in: [String]
  seo_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  topSectionCollection_exists: Boolean
}

input cfSeoNestedFilter {
  AND: [cfSeoNestedFilter]
  OR: [cfSeoNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  image_exists: Boolean
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  noFollow: Boolean
  noFollow_exists: Boolean
  noFollow_not: Boolean
  noIndex: Boolean
  noIndex_exists: Boolean
  noIndex_not: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfcomponentsMultiTypeNestedFilter {
  AND: [cfcomponentsMultiTypeNestedFilter]
  OR: [cfcomponentsMultiTypeNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

input cfmenuItemsMultiTypeNestedFilter {
  AND: [cfmenuItemsMultiTypeNestedFilter]
  OR: [cfmenuItemsMultiTypeNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

input cfpageContentMultiTypeNestedFilter {
  AND: [cfpageContentMultiTypeNestedFilter]
  OR: [cfpageContentMultiTypeNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

input cftopSectionMultiTypeNestedFilter {
  AND: [cftopSectionMultiTypeNestedFilter]
  OR: [cftopSectionMultiTypeNestedFilter]
  backgroundImage_exists: Boolean
  buttonLink: String
  buttonLink_contains: String
  buttonLink_exists: Boolean
  buttonLink_in: [String]
  buttonLink_not: String
  buttonLink_not_contains: String
  buttonLink_not_in: [String]
  buttonText: String
  buttonText_contains: String
  buttonText_exists: Boolean
  buttonText_in: [String]
  buttonText_not: String
  buttonText_not_contains: String
  buttonText_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fullWidth: Boolean
  fullWidth_exists: Boolean
  fullWidth_not: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_not_contains: String
  sys: SysFilter
  test: Int
  test_exists: Boolean
  test_gt: Int
  test_gte: Int
  test_in: [Int]
  test_lt: Int
  test_lte: Int
  test_not: Int
  test_not_in: [Int]
  testmeer_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}